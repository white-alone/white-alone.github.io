<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>White-Alone</title>
  
  <subtitle>蝴蝶再美 终究飞不过沧海</subtitle>
  <link href="http://github.white-alone.com/atom.xml" rel="self"/>
  
  <link href="http://github.white-alone.com/"/>
  <updated>2023-12-21T14:53:26.058Z</updated>
  <id>http://github.white-alone.com/</id>
  
  <author>
    <name>white</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>知识星球</title>
    <link href="http://github.white-alone.com/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83/"/>
    <id>http://github.white-alone.com/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83/</id>
    <published>2023-12-21T21:38:54.000Z</published>
    <updated>2023-12-21T14:53:26.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-引言"><a href="#0x01-引言" class="headerlink" title="0x01 引言"></a>0x01 引言</h1><p>马上就2024了，在2023年迎来了三宝的到来，大宝也开始了小学生涯，生活的鸭梨更大了一些。在各位兄弟的帮助下，买下了大一点的房子，以后在家里也能有个小实验室了，虽然距离B站创始人的实验室还有若干差距，但至少有了一个好的开始，不是么^_^</p><pre><code>[探秘！B站联合创始人的《钞能力实验室》](https://www.bilibili.com/video/BV1bu4y1w7dh/)</code></pre><h1 id="0x02-目标"><a href="#0x02-目标" class="headerlink" title="0x02 目标"></a>0x02 目标</h1><p>2024年，会更聚焦于硬件安全方向，欠下来的债要还，挖的坑要填，2023年还是折腾了不少东西的，但都因为种种原因没有展示出来发布出来，24年会酌情放出。</p><p>CUBE是很多朋友期待了很久的极客玩具，我会尽早设计完善出来，经过了这么多年，科技一直在进步，CUBE的芯片方案、功能需求其实也一直在迭代优化，加上自己的想法也很杂散，所以一直做做停停改改，一直没有让自己满意，希望在24年能和大家见面，拖延症不能再拖了。。。</p><h1 id="0x03-知识星球"><a href="#0x03-知识星球" class="headerlink" title="0x03 知识星球"></a>0x03 知识星球</h1><p>曾经架设了IoT Craftsman论坛，但发现论坛这种形式已经没落了，微信、QQ等即时聊天工具又太零散，又不是电商搞私域运营，而Blog终究只是个信息发布平台，在简单调研了几个平台后，决定还是启用曾经创建的知识星球。</p><p><strong>这个知识星球，有年费门槛，经济状况不允许的朋友请优先保障生活质量！</strong></p><p>主要会分享一些IT数码电子、IoT硬件无线电安全等方向的教程、文章、文件等，频率不会太高。</p><p>目前给自己定的要求是：<br>1、每月至少更新1篇原创文章<br>2、每周都要抽时间出来回答提问</p><p>此外，等新房子装修空置好，搬家之前要清理一大批乱七八糟的设备，打算作为抽奖奖品发给成员~~<br>所以如果加入了星球，务必登记好信息。</p><p><strong>成员超过50就开始抽奖╰(<em>°▽°</em>)╯</strong></p><h1 id="0x04-未来"><a href="#0x04-未来" class="headerlink" title="0x04 未来"></a>0x04 未来</h1><p>看知识星球的实际运营情况吧，也会邀请合伙人、嘉宾或者管理员来一起分享。</p><p>至于cube之类的产品后续如果有产出有交互，到时候再看是以论坛还是交流群还是星球的方式运营。</p><h1 id="0x05-最后"><a href="#0x05-最后" class="headerlink" title="0x05 最后"></a>0x05 最后</h1><p>这个Blog还会继续存在，以后也还会继续更新分享一些文章教程，只不过会比星球有一定延迟而已【感谢打赏过的朋友】。</p><p>虽然过去了那么多年，虽然已经是三个孩子的父亲，也早就不孤独了，但我还是我，”不孤独” 的 “小白”，继续保持谦卑的心态，不忘初心，方得始终。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83/1703167156373.jpg" alt="知识星球"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-引言&quot;&gt;&lt;a href=&quot;#0x01-引言&quot; class=&quot;headerlink&quot; title=&quot;0x01 引言&quot;&gt;&lt;/a&gt;0x01 引言&lt;/h1&gt;&lt;p&gt;马上就2024了，在2023年迎来了三宝的到来，大宝也开始了小学生涯，生活的鸭梨更大了一些。在各位兄</summary>
      
    
    
    
    <category term="Home" scheme="http://github.white-alone.com/categories/Home/"/>
    
    
    <category term="知识" scheme="http://github.white-alone.com/tags/%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>ESXi不认SN640/SN750等SSD的问题解决方法</title>
    <link href="http://github.white-alone.com/ESXi%E4%B8%8D%E8%AE%A4SN640SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://github.white-alone.com/ESXi%E4%B8%8D%E8%AE%A4SN640SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2023-04-28T17:09:46.000Z</published>
    <updated>2023-06-03T04:24:59.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h1><p>最近SSD价格暴跌，加上很多大船货来袭，曾经大容量的SSD基本都白菜价了。最近上车了一个西数SN640 7.68T U2 SSD，在Win和Ubuntu下都没问题，但在安装ESXi的时候发现不认，一开始以为和之前<a href="https://blog.white-alone.com/ESXi%207.0U2%E9%A9%B1%E5%8A%A8%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86C2000%20Pro%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">海康C2000 Pro</a>的问题一样，但仔细分析了一下，不是驱动的问题，这个问题出在4K扇区上，一般SSD都是用的512扇区确保兼容性，但实际上4K扇区的性能更好，而SN640/SN750默认都是4K扇区，而ESXi默认是不认4K扇区的，所以解决方案就是将SSD设置为512扇区。</p><h1 id="0x01-安装ESXi时设置"><a href="#0x01-安装ESXi时设置" class="headerlink" title="0x01 安装ESXi时设置"></a>0x01 安装ESXi时设置</h1><p>安装过程中，没有看到盘</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685265858127.png" alt="安装时候看不到SN640"></p><p>用快捷键<code>Alt+F1</code>切换到控制台<br>账号root密码为空</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685265910065.png" alt="切换到控制台"></p><p>看下nvme list</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/vmware/nvme/esxcli-nvme-plugin --op nvme.device.list</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685265929048.png" alt="nvme list"></p><p>可以看到有6块nvme的ssd，挨个看下找出西数的SN640</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/opt/vmware/nvme/esxcli-nvme-plugin --op nvme.device.get -A vmhba2 | egrep -A1 "Model|Serial"</span><br><span class="line">/opt/vmware/nvme/esxcli-nvme-plugin --op nvme.device.get -A vmhba3 | egrep -A1 "Model|Serial"</span><br><span class="line">/opt/vmware/nvme/esxcli-nvme-plugin --op nvme.device.get -A vmhba4 | egrep -A1 "Model|Serial"</span><br><span class="line">/opt/vmware/nvme/esxcli-nvme-plugin --op nvme.device.get -A vmhba1 | egrep -A1 "Model|Serial"</span><br><span class="line">/opt/vmware/nvme/esxcli-nvme-plugin --op nvme.device.get -A vmhba5 | egrep -A1 "Model|Serial"</span><br><span class="line">/opt/vmware/nvme/esxcli-nvme-plugin --op nvme.device.get -A vmhba6 | egrep -A1 "Model|Serial"</span><br></pre></td></tr></table></figure><p>看下具体信息，找到SN640硬盘</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685267457114.png" alt="找到SN640"></p><p>使用命令看下分区信息，可以看到LBA ID设置为0是4K，设置为1是512</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/vmware/nvme/esxcli-nvme-plugin --op nvme.device.namespace.get -A vmhba3 -n 1 | tail -40</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685267516745.png" alt="看下硬盘分区信息"></p><p>运行下面命令，格式化成512扇区，执行时候会卡住，等待30秒左右</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/vmware/nvme/esxcli-nvme-plugin --op nvme.device.namespace.format -A vmhba3 -f 1 -n 1 -m 0 -p 0 -l 0 -s 0</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685266241908.png" alt="执行格式化命令"><br>在用快捷键<code>Alt+F2</code>，切换回安装界面，按F5刷新下，就可以看到硬盘了</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685266276929.png" alt="F5刷新"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685266287360.png" alt="可以看到硬盘"></p><h1 id="0x02-已经安装好ESXi设置"><a href="#0x02-已经安装好ESXi设置" class="headerlink" title="0x02 已经安装好ESXi设置"></a>0x02 已经安装好ESXi设置</h1><p>如果已经安装好ESXi，只是新加了一块4K分区盘，解决方法差不多。<br>如果本机直接操作，可以使用快捷键<code>Alt+F1</code>切换到终端执行命令，也可以开始SSH后远程操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esxcli nvme device list</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685266731562.png" alt="看下nvme list"></p><p>和安装时候类似，再看下具体信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">esxcli nvme device get -A vmhba6 | egrep -A1 "Model|Serial"</span><br><span class="line">esxcli nvme device get -A vmhba4 | egrep -A1 "Model|Serial"</span><br><span class="line">esxcli nvme device get -A vmhba1 | egrep -A1 "Model|Serial"</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685267007702.png" alt="nvme序列号信息"></p><p>找到SN640硬盘，看看相关信息，可以看到和安装时候看到的一样，LBA ID设置为0是4K，设置为1是512</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esxcli nvme device namespace get -A vmhba1 -n 1 | tail -30</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685267067795.png" alt="详细信息"></p><p>和前面类似，格式化即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esxcli nvme device namespace format -A vmhba1 -f 1 -n 1 -m 0 -p 0 -l 0 -s 0</span><br></pre></td></tr></table></figure><p>格式化完成后刷新下，就可以识别新安装的硬盘了</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E4%B8%8D%E8%AE%A4SN640_SN750%E7%AD%89SSD%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1685267663453.png" alt="识别出SN640硬盘"></p><h1 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03 结语"></a>0x03 结语</h1><p>其实不止是SN640/SN750，很多新的SSD或者大容量SSD在ESXi下都有这个问题，参照本文的解决方案操作即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x00-背景&quot;&gt;&lt;a href=&quot;#0x00-背景&quot; class=&quot;headerlink&quot; title=&quot;0x00 背景&quot;&gt;&lt;/a&gt;0x00 背景&lt;/h1&gt;&lt;p&gt;最近SSD价格暴跌，加上很多大船货来袭，曾经大容量的SSD基本都白菜价了。最近上车了一个西数SN64</summary>
      
    
    
    
    <category term="Home" scheme="http://github.white-alone.com/categories/Home/"/>
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/tags/ESXi/"/>
    
  </entry>
  
  <entry>
    <title>11代12代以及海光CPU服务器ESXi无法启动问题</title>
    <link href="http://github.white-alone.com/11%E4%BB%A312%E4%BB%A3%E4%BB%A5%E5%8F%8A%E6%B5%B7%E5%85%89CPU%E6%9C%8D%E5%8A%A1%E5%99%A8ESXi%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://github.white-alone.com/11%E4%BB%A312%E4%BB%A3%E4%BB%A5%E5%8F%8A%E6%B5%B7%E5%85%89CPU%E6%9C%8D%E5%8A%A1%E5%99%A8ESXi%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/</id>
    <published>2022-10-20T16:09:19.000Z</published>
    <updated>2022-11-26T11:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-背景"><a href="#0x01-背景" class="headerlink" title="0x01 背景"></a>0x01 背景</h1><p>NUC9i7QNX因为有2个PCI-E槽让我眼热了很久，最近的价格很香，就在闲鱼淘了2台。</p><p>双PCI-E插槽，可以插2个PCI-E的SDR卡，可以很愉快的跑5G NSA！之前用M920X只有一个PCIE，只能插一块卡，导致只能跑5G SA。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/NUC12_%E6%B5%B7%E5%85%89CPU%E6%9C%8D%E5%8A%A1%E5%99%A8ESXi%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/1669451114071.png" alt="nuc9i7qnx"></p><p>也可以装一块BCM57810卡插2根猫棒，再来个X520/X710/X540/X550的万兆网卡，加上板载2个千兆口，做软路由也一点问题都没。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/11%E4%BB%A312%E4%BB%A3%E4%BB%A5%E5%8F%8A%E6%B5%B7%E5%85%89CPU%E6%9C%8D%E5%8A%A1%E5%99%A8ESXi%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/1669452595443.png" alt="nuc9软路由"><br>因为NUC9是计算卡+PCIE底板的结构，就看了下最新的计算卡，然后就整了一台最新的NUC12BTMi9猛兽峡谷。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/NUC12_%E6%B5%B7%E5%85%89CPU%E6%9C%8D%E5%8A%A1%E5%99%A8ESXi%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/1669451034922.png" alt="nuc12btmi9"></p><p>然后发现NUC11还有的2个PCIE插槽到了NUC12就剩1个了，让人无语，虽然可以插一块SDR100的PCIE卡，但终究不爽，不过板载的10G+2.5G口还可以。</p><h1 id="0x02-ESXi无法安装的问题"><a href="#0x02-ESXi无法安装的问题" class="headerlink" title="0x02 ESXi无法安装的问题"></a>0x02 ESXi无法安装的问题</h1><p>既然没法做sdr测试机，那就做ESXi服务器试试吧，毕竟12代i9的性能还是杠杠的，然后安装esxi时候就坑了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/11%E4%BB%A312%E4%BB%A3%E4%BB%A5%E5%8F%8A%E6%B5%B7%E5%85%89CPU%E6%9C%8D%E5%8A%A1%E5%99%A8ESXi%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/1669451612545.png" alt="esxi紫屏"></p><p>先排除了内存问题，看报错感觉像是CPU的问题，于是打算再找几个没跑过esxi的机器上试试，果然，在i9-11900K的台式机和国产海光CPU的服务器上，也遇到了这个问题，可以初步判断是ESXi支持的CPU列表中没有这几款CPU导致的。</p><h1 id="0x03-解决问题的方法"><a href="#0x03-解决问题的方法" class="headerlink" title="0x03 解决问题的方法"></a>0x03 解决问题的方法</h1><p>在安装ESXi的时候，引导后，按<code>Shift+O</code>键。<br>进入命令行后，在<code>runweasel cdromBoot</code>之后输入<code>autoPartitionOSDataSize=4096</code>用于减小<code>VMFSL</code>空间，再加上<code>cpuUniformityHardCheckPanic=FALSE</code>来取消CPU的检查，之后回车继续安装。</p><p>安装完成后，如果直接重启还会遇到紫屏问题，需要重新按<code>Shift+O</code>键来输入取消检查的命令，每次启动都这样做太麻烦了。</p><p>所以安装完成后，先开启SSH，登录进去后，执行命令关闭CPU启动检查功能就可以了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esxcli system settings kernel set -s cpuUniformityHardCheckPanic -v FALSE</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/11%E4%BB%A312%E4%BB%A3%E4%BB%A5%E5%8F%8A%E6%B5%B7%E5%85%89CPU%E6%9C%8D%E5%8A%A1%E5%99%A8ESXi%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/1669452648059.png" alt="nuc12"><br>在海光CPU的服务器同样有这个问题，虽然是AMD的EPYC换皮，但并没有用加到ESXi的支持列表中。</p><p>PS：服务器的拖拉机起飞太猛了，完全扛不住，所以做了散热改造，目前勉强能忍受 T_T</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/11%E4%BB%A312%E4%BB%A3%E4%BB%A5%E5%8F%8A%E6%B5%B7%E5%85%89CPU%E6%9C%8D%E5%8A%A1%E5%99%A8ESXi%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/1669452835355.png" alt="海光CPU测试服务器"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-背景&quot;&gt;&lt;a href=&quot;#0x01-背景&quot; class=&quot;headerlink&quot; title=&quot;0x01 背景&quot;&gt;&lt;/a&gt;0x01 背景&lt;/h1&gt;&lt;p&gt;NUC9i7QNX因为有2个PCI-E槽让我眼热了很久，最近的价格很香，就在闲鱼淘了2台。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/categories/ESXi/"/>
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/tags/ESXi/"/>
    
  </entry>
  
  <entry>
    <title>ESXi 7.x 安装到U盘</title>
    <link href="http://github.white-alone.com/ESXi%207.x%20%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/"/>
    <id>http://github.white-alone.com/ESXi%207.x%20%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/</id>
    <published>2022-10-09T19:51:53.000Z</published>
    <updated>2022-11-26T13:08:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-背景"><a href="#0x01-背景" class="headerlink" title="0x01 背景"></a>0x01 背景</h1><p>R86S刚出来时候还是很火的，各路网友吹爆，就跟风买了个万兆版，然后发现很鸡肋，万兆网卡太烂，远不如我的M920X+X520，定制挡板美滋滋。性能拉胯，N5105热得一批。体积小是唯一优点，但M920X也不大。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669463836772.png" alt="R86S"></p><p>至于软件，万兆版本没有NVME接口，板载EMMC没法装ESXi，PVE用的少，虚拟机模板不多，而且sr-iov配置很坑，最终决定在U盘或者TF卡上装一个ESXi试试。</p><h1 id="0x02-ESXi-7-x-不建议安装到TF卡或者U盘"><a href="#0x02-ESXi-7-x-不建议安装到TF卡或者U盘" class="headerlink" title="0x02 ESXi 7.x 不建议安装到TF卡或者U盘"></a>0x02 ESXi 7.x 不建议安装到TF卡或者U盘</h1><p>在ESXi 5.x和6.x时代，将ESXi安装在U盘或者TF卡上非常常见，当年HP Gen8上的tf卡槽，还有很多服务器上的tf卡槽，给esxi用太配了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669464236640.png" alt="HP Gen8主板上的TF卡槽"><br>但到了ESXi 7.x时代，官方也说了原因：<a href="https://kb.vmware.com/s/article/85685" target="_blank" rel="noopener">https://kb.vmware.com/s/article/85685</a><br>因为系统机制的改变，会高频读写，TF卡的性能和寿命不足以支持，所以，别说TF卡，用QLC或者TLC的SSD都有可能会凉！这也是很多人在SSD上装ESXi跑一段时间后，写入量非常大，远比跑Win/Linux系统的日常使用写入大。</p><p>大概率是VMFSL的问题，这个虚拟分区就类似Linux的SWAP分区一样，做缓存写入量当然大。</p><p>不过我还是打算用U盘装一下试试。</p><h1 id="0x03-ESXi-7-x-安装到U盘"><a href="#0x03-ESXi-7-x-安装到U盘" class="headerlink" title="0x03 ESXi 7.x 安装到U盘"></a>0x03 ESXi 7.x 安装到U盘</h1><p>我用的是SanDisk的256G U盘，在安装ESXi的时候，引导后，按<code>Shift+O</code>键。<br>进入命令行后，在<code>runweasel cdromBoot</code>后输入<code>autoPartitionOSDataSize=4096</code>，然后按回车执行后续正常安装步骤，和安装到硬盘的方法一样，ESXi 7.x 可以直接安装到U盘，但在磁盘分区看不到磁盘，还是需要进行一些处理的。</p><p>装完后，先看看VMFSL的设置没有生效<br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669465475504.png" alt="VMFSL设置"></p><p>安装完成后，打开SSH，关掉USB服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/usbarbitrator stop</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669465541426.png" alt="关闭USB服务"></p><p>用<code>partedUtil</code>看下分区表，可以和web上看到的分区表对应上 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /dev/disks/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">partedUtil getptbl /dev/disks/mpx.vmhba32\:C0\:T0\:L0</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669465577710.png" alt="查看分区表"><br>用<code>partedUtil</code>调整<code>VMFSL</code>分区大小为4G，其实就是设置<code>VMFSL</code>的起始扇区和结束扇区，同时可以看到整个磁盘分区表结束扇区是<code>500170718</code>，记下这个数值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4G=1024*1024*1024*4/512=8388608</span><br><span class="line">16986112+8388608-1=25374719</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">partedUtil resize <span class="string">"/dev/disks/mpx.vmhba32:C0:T0:L0"</span> 7 16986112 25374719</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669465815513.png" alt="调整分区大小"></p><p>调整完成后，可以看到web页面的分区表也变了，<code>VMFSL</code>分区已经设置成4G</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669465850672.png" alt="调整后的分区表"></p><p>之后在分区表新增<code>VMFS</code>分区，分区间隔可以看到分区<code>5</code>的结束扇区和<code>6</code>的起始扇区，<code>6</code>的结束扇区和<code>7</code>的起始扇区，都是<code>2049=8597504-8595455=16986112-16984063</code>，所以新建的<code>VMFS</code>分区编号是<code>8</code>，起始扇区是<code>25374719+2049=25376768</code>，结束扇区是之前看到的<code>500170718</code>，UUID设置为<code>AA31E02A400F11DB9590000C2911D1B8</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">partedUtil setptbl <span class="string">"/dev/disks/mpx.vmhba32:C0:T0:L0"</span> gpt \</span><br><span class="line"><span class="string">"1 64 204863 C12A7328F81F11D2BA4B00A0C93EC93B 128"</span> \</span><br><span class="line"><span class="string">"5 208896 8595455 EBD0A0A2B9E5443387C068B6B72699C7 0"</span> \</span><br><span class="line"><span class="string">"6 8597504 16984063 EBD0A0A2B9E5443387C068B6B72699C7 0"</span> \</span><br><span class="line"><span class="string">"7 16986112 25374719 4EB2EA3978554790A79EFAE495E21F8D 0"</span> \</span><br><span class="line"><span class="string">"8 25376768 500170718 AA31E02A400F11DB9590000C2911D1B8 0"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">partedUtil getptbl /dev/disks/mpx.vmhba32\:C0\:T0\:L0</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669465886112.png" alt="新增VMFS分区"><br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669466003876.png" alt="查看分区信息"></p><p>创建数据存储</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/vmkfstools -C vmfs6 -b 1m -S UDisk /vmfs/devices/disks/mpx.vmhba32\:C0\:T0\:L0:8</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669466047865.png" alt="创建数据存储"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi%E5%AE%89%E8%A3%85%E5%88%B0U%E7%9B%98/1669466066765.png" alt="数据存储"><br>到这里就已经安装好了，可以在U盘上运行ESXi了，TF卡也是一样。</p><h1 id="0x04-结语"><a href="#0x04-结语" class="headerlink" title="0x04 结语"></a>0x04 结语</h1><p>不过还是不建议在U盘或者TF卡上跑ESXi 7.x，毕竟都不想一段时候后U盘或者TF卡凉凉了吧~~</p><p>当然，如果没有ESXi 7.x的刚需，用ESXi 6.x或者5.x，那就没问题了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-背景&quot;&gt;&lt;a href=&quot;#0x01-背景&quot; class=&quot;headerlink&quot; title=&quot;0x01 背景&quot;&gt;&lt;/a&gt;0x01 背景&lt;/h1&gt;&lt;p&gt;R86S刚出来时候还是很火的，各路网友吹爆，就跟风买了个万兆版，然后发现很鸡肋，万兆网卡太烂，远不如</summary>
      
    
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/categories/ESXi/"/>
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/tags/ESXi/"/>
    
  </entry>
  
  <entry>
    <title>RealVNC在Ubuntu 22.04无法开启的问题</title>
    <link href="http://github.white-alone.com/RealVNC%E5%9C%A8Ubuntu%2022.04%E6%97%A0%E6%B3%95%E5%BC%80%E5%90%AF%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://github.white-alone.com/RealVNC%E5%9C%A8Ubuntu%2022.04%E6%97%A0%E6%B3%95%E5%BC%80%E5%90%AF%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-08-26T15:53:37.000Z</published>
    <updated>2022-11-26T08:14:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-背景"><a href="#0x01-背景" class="headerlink" title="0x01 背景"></a>0x01 背景</h1><p>因为折腾各种环境比较多，现在精力也有限，像以前那样玩archlinux、gentoo的已经不大可能了，甚至debian用的都少，一般都是ubuntu的lts版本，之前是18.04.现在是20.04。</p><h1 id="0x02-遇到的问题"><a href="#0x02-遇到的问题" class="headerlink" title="0x02 遇到的问题"></a>0x02 遇到的问题</h1><p>因为设备多，各种物理机、虚拟机，自己用的系统也是linux、win、mac都有，我一般都用realvnc做远程管理软件，纯局域网控制，兼容性和性能都不错。<br>在Ubuntu 22.04发布后，也是最近才装了下，然后发现最常用的realvnc在22.04上没法跑，一直弹认证窗，输入密码也没用。<br>内外网搜了一圈都没好的解决方案，后面看了下log，对比了下20.04和22.04，最后初步定位问题出在Wayland，Wayland是Ubuntu 22.04 LTS 才开始作为默认显示服务器。</p><h1 id="0x03-解决方法"><a href="#0x03-解决方法" class="headerlink" title="0x03 解决方法"></a>0x03 解决方法</h1><p>改vnc来适配Wayland短期肯定搞不定，还是等厂商来解决吧，作为一个使用者，最简单的方法就是禁用Wayland。<br>Ubuntu 22.04默认的登录管理还是gdm3，所以可以通过修改gdm3配置文件来处理，方法也很简单，将<strong>WaylandEnable</strong>改成<strong>false</strong>就可以了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/^#.*WaylandEnable=.*/WaylandEnable=false/'</span> /etc/gdm3/custom.conf</span><br></pre></td></tr></table></figure><p>改完后，重新启动，就可以愉快的玩耍了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x01-背景&quot;&gt;&lt;a href=&quot;#0x01-背景&quot; class=&quot;headerlink&quot; title=&quot;0x01 背景&quot;&gt;&lt;/a&gt;0x01 背景&lt;/h1&gt;&lt;p&gt;因为折腾各种环境比较多，现在精力也有限，像以前那样玩archlinux、gentoo的已经不大可能了</summary>
      
    
    
    
    <category term="Linux" scheme="http://github.white-alone.com/categories/Linux/"/>
    
    
    <category term="Ubuntu" scheme="http://github.white-alone.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ESXi7.0封装Intel I225V B3网卡驱动</title>
    <link href="http://github.white-alone.com/ESXi7.0%E5%B0%81%E8%A3%85Intel%20I225V%20B3%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/"/>
    <id>http://github.white-alone.com/ESXi7.0%E5%B0%81%E8%A3%85Intel%20I225V%20B3%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/</id>
    <published>2022-06-12T10:37:27.000Z</published>
    <updated>2022-11-26T09:20:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi7.0%E5%B0%81%E8%A3%85Intel_I225V_B3%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/1655001839140.png" alt="N5105四口软路由"><br>刚买了个最近很流行的N5105第三版4口软路由，双nvme，intel 2.5G网卡，看着不错。习惯性先上个当前最新的esxi 7.0u3d，然后尴尬了，居然没识别网卡，看了下这个2.5G网卡esxi默认不支持，需要安装社区版驱动，这里就简单记录下，其实方法和之前的<a href="https://blog.white-alone.com/ESXi%20%E5%B0%81%E8%A3%85I219V%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/" target="_blank" rel="noopener">《ESXi 封装I219V网卡驱动》</a>差不多，只不过版本和驱动有点不一样。</p><h1 id="0x10-准备工作"><a href="#0x10-准备工作" class="headerlink" title="0x10 准备工作"></a>0x10 准备工作</h1><p>管理员权限打开powershell<br>安装工具<br>Install-Module -Name VMware.PowerCLI<br>更改策略<br>Set-ExecutionPolicy RemoteSigned</p><p>esxi的社区有很多爱好者在做各种各样的驱动兼容，这里要用的就是网卡驱动。<br><a href="https://flings.vmware.com/community-networking-driver-for-esxi" target="_blank" rel="noopener">Net-Community-Driver_1.2.7.0-1vmw.700.1.0.15843807_19480755.zip</a></p><p>再看看<a href="https://www.virten.net/vmware/vmware-esxi-image-profiles/" target="_blank" rel="noopener">esxi版本</a>，这里选择当前最新版7.0u3d：ESXi-7.0U3d-19482537-standard</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi7.0%E5%B0%81%E8%A3%85Intel_I225V_B3%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/1655002212925.png" alt="esxi 7.0u3d"><br>这次从本地进行打包，就不走在线的方式了，当前最新depot包：VMware-ESXi-7.0U3d-19482537-depot.zip</p><p>将系统包和驱动包都放到一个目录，比如 “d:\ESXi”</p><h1 id="0x20-打包镜像"><a href="#0x20-打包镜像" class="headerlink" title="0x20 打包镜像"></a>0x20 打包镜像</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$esxiOfflineBundle</span> = <span class="string">"VMware-ESXi-7.0U3d-19482537-depot.zip"</span> </span><br><span class="line"><span class="variable">$netOfflineBundle</span> = <span class="string">"Net-Community-Driver_1.2.7.0-1vmw.700.1.0.15843807_19480755.zip"</span> </span><br><span class="line"><span class="variable">$baseProfile</span> = <span class="string">"ESXi-7.0U3d-19482537-standard"</span></span><br><span class="line"><span class="variable">$newProfile</span> = <span class="string">"ESXi-7.0U3d-19482537-i225"</span></span><br><span class="line"><span class="variable">$newVendor</span> = <span class="string">"white-alone.com"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Add-EsxSoftwareDepot</span> .\<span class="string">"<span class="variable">$esxiOfflineBundle</span>"</span></span><br><span class="line"><span class="built_in">Add-EsxSoftwareDepot</span> .\<span class="string">"<span class="variable">$netOfflineBundle</span>"</span> </span><br><span class="line"><span class="built_in">New-EsxImageProfile</span> <span class="literal">-CloneProfile</span> <span class="string">"<span class="variable">$baseProfile</span>"</span> <span class="literal">-name</span> <span class="string">"<span class="variable">$newProfile</span>"</span> <span class="literal">-Vendor</span> <span class="variable">$newVendor</span></span><br><span class="line"><span class="built_in">Add-EsxSoftwarePackage</span> <span class="literal">-ImageProfile</span> <span class="string">"<span class="variable">$newProfile</span>"</span> <span class="literal">-SoftwarePackage</span> <span class="string">"net-community"</span></span><br><span class="line"><span class="built_in">Export-ESXImageProfile</span> <span class="literal">-ImageProfile</span> <span class="string">"<span class="variable">$newProfile</span>"</span> <span class="literal">-ExportToIso</span> <span class="literal">-filepath</span> <span class="string">"<span class="variable">$newProfile</span>.iso"</span></span><br><span class="line"><span class="built_in">Export-ESXImageProfile</span> <span class="literal">-ImageProfile</span> <span class="string">"<span class="variable">$newProfile</span>"</span> <span class="literal">-ExportToBundle</span> <span class="literal">-filepath</span> <span class="string">"<span class="variable">$newProfile</span>.zip"</span></span><br></pre></td></tr></table></figure><p>这就打包好了集成了i225驱动的ESXi 7.0u3d的镜像了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi7.0%E5%B0%81%E8%A3%85Intel_I225V_B3%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/1655003642041.png" alt="打包好的镜像"></p><h1 id="0x30-安装系统"><a href="#0x30-安装系统" class="headerlink" title="0x30 安装系统"></a>0x30 安装系统</h1><p>然后就可以愉快的用iso安装或者用zip升级了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi7.0%E5%B0%81%E8%A3%85Intel_I225V_B3%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/1655004488160.png" alt="安装ESXi 7.0"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi7.0%E5%B0%81%E8%A3%85Intel_I225V_B3%E7%BD%91%E5%8D%A1%E9%A9%B</summary>
      
    
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/categories/ESXi/"/>
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/tags/ESXi/"/>
    
  </entry>
  
  <entry>
    <title>家庭网络升级指南【三】</title>
    <link href="http://github.white-alone.com/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%89%E3%80%91/"/>
    <id>http://github.white-alone.com/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%89%E3%80%91/</id>
    <published>2022-05-31T23:16:18.000Z</published>
    <updated>2022-05-31T15:21:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>前面简单讲了作为家庭宽带的入口的光猫或者猫棒，这次就讲讲次一级的设备，也就是路由器，当然，也有用交换机做次级设备的，这种后面也会讲。</p><h2 id="0x40-路由器"><a href="#0x40-路由器" class="headerlink" title="0x40 路由器"></a>0x40 路由器</h2><p>路由器作为常用网络设备，基本家家户户都有，要么用光猫做路由器，要么单买路由器，总之，只要家里有网络，可以说肯定存在路由器。</p><p>至于路由器的工作原理，涉及到网络协议，这里就不多讲，有兴趣的同学自行百度，有很多讲的很好的文章或者视频，可以简单的理解为一个网关，家里的电脑、手机、电视盒子、智能家居都要通过它才能连到互联网。</p><p>如果在电商网站搜索路由器，看到很多种，什么千兆路由、mesh路由、双频路由、软路由等等，都会挑花了眼，这里我就简单讲讲，升级家里的路由器，需要注意哪些。</p><p><strong>1、选择有线路由还是无线路由？</strong></p><p>从省钱的角度来说，一个无线路由可以满足需求的话，直接无线路由就行，毕竟现在手机、平板、笔记本电脑都是wifi为主，有线毕竟麻烦。选择有线路由一般是因为后面串了无线路由当AP或者有AC+AP架构。</p><p><strong>2、是否需要软路由？</strong></p><p>软路由其实本质是一台x86的pc电脑，跑的路由器的系统，如果家里设备太多、有多条宽带、有插件需求，就可以考虑软路由，如果只是普通家用，没必要浪费钱。有关软路由后面会有一篇文章单独讲，这里不赘述。</p><p><strong>3、普通无线路由怎么选？</strong></p><p>首先我们要关注路由器的几个参数，和电脑类似，路由器本质其实也是个小电脑，只不过cpu是mips的或者arm的，内存一般几十几百M，现在大的也有一两G，flash也比较小。所以，我们第一个要关注参数，就是路由器的硬件配置。</p><p>以京东云路由雅典娜为例，在网上搜下拆机图，都可以看到配置，CPU是高通IPQ6010 四核1.8GHz带NPU，内存1G，Flash是128G，配置非常高。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%89%E3%80%91/1654006580954.png" alt="雅典娜拆机图"></p><p>基本上常见的路由，在网上都能找到评测、拆机的文章，可以对比下，当然，里面的各种测速吹水就不用看太多，很多都是收钱写的宣传稿。</p><p>一般来说，路由器的配置决定了性能和带机数量，如果家里电脑、手机、平板、智能电视、智能家居数量很多的话，配置不够的路由器带不起来，就像在餐馆用餐，高峰期时候餐馆的wifi是连不上的，因为连的人太多了，如果设备数量很多，那就建议用软路由带AP的架构比较合适，因为高端路由的价格远超软路由带AP的价格，性能还不如软路由！</p><p>cpu、内存、flash三要素看完后，再就看wan后和lan口速度，现在基本都普及全千兆了，高端路由带2.5G口，比如雅典娜的wan口就是2.5G，当然，如果家里就千兆宽带，除非局域网是2.5G或者万兆，不然2.5G基本用不上，至于双wan、链路聚合等各种花里胡哨的功能，看看就行，大多数人用不上，真要是有多线需求，上个软路由更合适。</p><p>当然，作为无线路由，最重要的当然要看无线的性能了，注意，路由器的宣传，在这里有很多水分，大家一定要注意！还是拿雅典娜举例，无线的宣传是“WiFi6 AX6600三频”，意思是支持WiFi6，然后<strong>三个频段总计带宽6600</strong>，没错，总计，意思就是3个频段的设备合计总带宽，而当前主流的设备都只用一个频段，比如最新款的手机支持wifi6 4x4 mimo，那就可以最大跑到4804M，但大部分设备都跑不到这个速度！</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%89%E3%80%91/1654007151219.png" alt="雅典娜官方介绍"></p><p>所以呢，挑路由器时候，不要被宣传的什么AX1800、AX3600、AX7200等看的非常牛逼的参数误导，按需选用就好，比如家里电脑、手机都比较老，且最近几年没有升级换代的打算，那没必要买太贵的WIFI 6路由器，因为完全用不上，浪费。另外还需要注意，wifi曾经分abgn、ac、ax等，现在都直接改名成wifi5、6、7等更直观的名字，理论上版本号越大，速度越快，所以电子数码在条件允许的前提下，买新不买旧，但不要买最高端的，因为性价比太低，保值期很短。</p><p>另外，从覆盖面积上 2.4G &gt; 5G，但网速方面 2.4G &lt; 5G。如果家里房子很大，或者承重墙比较多导致信号不好，可以考虑用多个路由组网，这个后面会讲。如果有高速wifi传输的需求，还是让上网的终端和路由器都是5G，甚至是Wifi 6最好。</p><p>最后，还有个非常重要的隐藏参数，小包转发，很多玩游戏的，尤其是对时延要求高的游戏，都要注意这个参数。这个参数软硬件都有影响，硬件层面上一般看cpu和交换芯片，软件层面就看系统调优了，有一些吹的神乎其神的电竞路由，其实就是内置了游戏加速器插件外加小包调优，但价格方面就比较智商税了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%89%E3%80%91/1654008258798.png" alt="华硕RT-AX86U"><br><strong>4、需不需要MESH？</strong></p><p>可能很多人都知道“无线漫游”，在一些大型商场、运动场馆、酒店非常常见一种无线覆盖模式，就像手机在运营商网络漫游一样，wifi也可以漫游。因为单个无线路由的覆盖区域有限，如果别墅豪宅太大了，肯定需要好几个无线路由才能做到wifi覆盖，而在屋子里走动的时候，手机会在路由之间自动切换且不会断开连接。</p><p>早年wifi的无缝漫游都是企业用户场景，都是AC+AP的架构，通过无线控制器和无线AP进行设备管理和调度，价格非常高，近几年随着技术的进步，mesh网络开始流行起来，简单的说，就是多个无线路由器之间可以自动组网，然后终端可以在网络之间随意漫游。</p><p>说起来很简单，现在支持mesh的路由器也非常多，基本上各个路由器厂商不支持个mesh都显得自己很low一样，但事实上，各家的实现逻辑也是大同小异，该蠢的一点都不含糊。</p><p>Mesh路由器之间自动组网，有的是有线连接，有的是无线连接，然后还需要对整个链路做最短路径和带宽调度，还要根据终端的移动做信号切换，整个算法做出来不难，做好非常难，迄今为止，华硕、网件、小米、tp-link、华为等厂家，没有哪一家做的完美，在网上搜一下，都能找到吐槽说mesh做的sb的地方，明明可以有线回程非要走无线，明明有最短路径非要绕一圈。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%89%E3%80%91/1654008893479.png" alt="路由器MESH组网"><br>所以呢，mesh路由使用和部署都非常方便，但千万不要对它抱有太高的预期，降低心理预期会比较有幸福感！</p><p>对于大House的兄弟们，也别吝啬这点钱了，上AC+AP传统架构吧，常见的品牌有TP-LINK，锐捷，爱快，H3C，华为，CISCO，ARUBA，UBNT。其中CISCO，ARUBA主要面向企业市场，性能强，稳定性高，当然价格也高，且配置复杂。家用的方案ubnt、华为、h3c也是比较贵的，tp算是最便宜的，当然好不好用，就需要好好看看了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%89%E3%80%91/1654009253187.png" alt="UBNT"></p><p>如果是家里新装修，走AC+AP架构，预先埋好网线，AP面板和吊顶AP可以让整体看着舒服很多，如果是早就装修好的房子，还没有预先埋线或者埋得线质量很差、位置不对，那就还是选择mesh无线组网可能会更好一点，好的无线mesh组网比劣质的有线组网更靠谱！</p><p>至于最新的FTTR全屋光纤覆盖，除非新装修能够埋光纤，并且家里宽带超过1000M，不然不建议走这种方案，性价比太低了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%89%E3%80%91/1654010472786.png" alt="FTTR"><br>早年还有wifi放大器、电力猫的补充方案，但现在随着mesh的普及，wifi放大器效果差，电力猫受限于电线质量和电路负载，稳定性不高，现在已经很少有厂商在做了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%89%E3%80%91/1654009856628.png" alt="电力猫"></p><h3 id="0x41-小节"><a href="#0x41-小节" class="headerlink" title="0x41 小节"></a>0x41 小节</h3><p>今天就先简单写到这里，路由器作为家庭网关，是非常重要的网络设备，家里的各种终端设备上网全靠它，如果发现上网不行、夏天网速不行、玩游戏卡顿，一般就需要检查下路由器了，看看是不是摆放位置不合适，或者路由器散热不行或者性能不行了。</p><p>最后，wifi技术这几年进步非常快，今年的顶配路由过两年可能就成中低端了，所以升级路由器还是慎重点，当然，早买早享受，按需选用。</p><p>最后，如果觉得文章对你有帮助，可以请我喝杯咖啡，谢谢~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前面简单讲了作为家庭宽带的入口的光猫或者猫棒，这次就讲讲次一级的设备，也就是路由器，当然，也有用交换机做次级设备的，这种后面也会讲。&lt;/p&gt;
&lt;h2 id=&quot;0x40-路由器&quot;&gt;&lt;a href=&quot;#0x40-路由器&quot; class=&quot;headerlink&quot; title=&quot;0x</summary>
      
    
    
    
    <category term="Home" scheme="http://github.white-alone.com/categories/Home/"/>
    
    
    <category term="网络" scheme="http://github.white-alone.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>家庭网络升级指南【二】</title>
    <link href="http://github.white-alone.com/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/"/>
    <id>http://github.white-alone.com/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/</id>
    <published>2022-05-22T00:01:18.000Z</published>
    <updated>2022-05-31T13:15:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>前面讲了网络架构和如何更换光猫，这里再提示下，大部分光猫的超级密码在网上都能找到解开的方法，比如导出配置文件、重置使用默认管理密码、打开telnet、绑定小翼管家查询等等。</p><h2 id="0x30-2-5G猫棒"><a href="#0x30-2-5G猫棒" class="headerlink" title="0x30 2.5G猫棒"></a>0x30 2.5G猫棒</h2><p>猫棒其实就是做成SFP模块的棒状光猫，也就这几年开始在民间流行起来，早年主流是南天和ODI的XPON Stick，Realtek方案的ONU，还有中兴方案的，现在随着intel方案的MA5671A、诺基亚、阿尔卡特的猫棒有爱好者编译出openwrt固件后，新一波的猫棒热潮开始。</p><p>但是，不要被这波热潮冲昏头脑，在花时间花钱折腾之前，可以问自己几个问题：<br>1、是否有设备越少越好的强迫症？需要将光猫换成猫棒？<br>2、是否弱电箱很小，放不下光猫？或者插座不够，放不下光猫电源？<br>3、是否家里是GPON千兆宽带，且希望能在偶尔一次测速时候能测出大约1200M的速度来装X或者取悦自己？<br>4、是否自己用的路由器、交换机有SFP口？<br>5、是否对猫棒有强烈的好奇心，不管它好不好用，就想尝试一下？</p><p>如果想明白了，那就可以继续看下去了。</p><p>在玩猫棒之前，首先得有个带SFP口的设备，比如mikrotik有很多带SFP的路由器或者交换机，TP-Link也有不少路由器或者交换机带SFP口，而且TP-Link很多款还支持2.5G模式。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653142986261.png" alt="mikrotik/tplink/ubnt带SFP口的设备"></p><p>或者也可以用加装光口网卡的软路由，比如联想M720/M920/P330/P340/P350配intel X520/X710万兆网卡以及定制挡板的1L软路由。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653145911940.png" alt="联想M920X和P340配光口万兆网卡"></p><p>如果没有带SFP口的交换机或者路由器，也可以用SFP光转电设备或者双光口转接板插一个光转电模块来玩。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653142586532.png" alt="SFP光转电或者双光口转接板"></p><p>有了带SFP的设备，才能连上猫棒，才能愉快的开始玩耍了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653132658583.png" alt="ODI和南天的XPON Stick"><br>先说说XPON Stick，其实就一个微缩版本的光猫，体积做的够小就行，因为不需要交换芯片，所以整体配置会比普通光猫低很多，方案大多是Realtek的RTL96xx，支持GPON和EPON双模，1.25G/2.5G上下行速率，LOID认证、MAC/SN修改都支持，使用非常方便，价格在200-300左右，而且兼容性非常好，一般设备都能支持。</p><p>但RTL方案的一个大坑就是发热非常严重，直接烫手，高温带来的就是性能降低，所以使用RTL96xx方案的猫棒，散热片是刚需，甚至有人折腾了水冷。我实测猫棒在满速下载时候，稳定性不如华为HS8145x6，但日常轻量级使用时候，小体积猫棒确实可以满足日常需求。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653135316058.png" alt="加了散热片的猫棒"></p><p>猫棒一般都兼容1.25G/2.5G速度，所以只要带SFP口的路由器、交换机能兼容2.5G速度，猫棒都能直接运行在2.5G速度下，这就是所谓“突破千兆”，而一般的光猫因为RJ45网口只有千兆，即使光口支持2.5G速度也因为网络瓶颈只能跑在千兆。</p><p>南天和ODI猫棒的设置非常简单，一般买的时候卖家也会给个说明，在网上也能搜到。<strong>先在交换上做好SFP口的桥接，然后猫棒插上光纤，再插入设备，等一会儿猫棒的OS就启动了</strong>，再打开网页登陆进去后，修改LOID和桥接方式、vlan_id就行，和换光猫类似。如果要改SN和mac，可以telnet修改。至于IPTV，也是通过vlan解决，具体可以网上搜一下，有不少教程。</p><p><strong>需要注意的是，ODI的猫棒修改mac后需要录入key才可以用，所以买ODI猫棒最好问清楚卖家可否提供key，不要在咸鱼随便买。</strong></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653137378520.png" alt="修改LOID"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653137402967.png" alt="vlan版本固件如果不使用vlan拨号的话，可以直接修改vlan进行桥接拨号"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653137821907.png" alt="非vlan版本固件可以猫棒直接PPPOE拨号或者桥接拨号"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653137537104.png" alt="如果只是LOID认证，O5就可以拨号，和换光猫一样"></p><p>再说说最近流行的华为MA5671A、诺基亚G010SA和阿尔卡特朗讯G010SP猫棒。这几款GPON Stick ONU原本是运营商、视频监控厂商用了好几年的老设备了，只是有老外研究，再就是阿瑟、牛奶等爱好者编译出了可以很方便修改LOID、MAC、SN等参数的LEDE系统，原来咸鱼一二十块的猫棒价格直接涨到现在一百多，猫棒的刷机方式也从最开始的拆SPI Flash写固件的方法升级为TTL刷机、TFTP刷机、OLT刷机。</p><p><strong><font color=red>注意：这几款是只支持GPON的猫棒，不是像前面介绍的双模猫棒，如果网络是EPON的不用看了，这几款都不支持！ </font></strong></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653135542555.png" alt="华为MA5671A"></p><p>当然，色铁等人在咸鱼也有在卖猫棒，卖的比较贵就是了，比较智商税。而JS们在提取牛奶等爱好者开发的固件后，把之前低价收购的猫棒刷上固件就开始高价卖，其实这也是很多开源爱好者的无奈，自己用爱发电，却肥了那些没有技术但就会盗版的JS们，比如HackRF One。再之后，还有阿瑟固件、牛奶固件等等，其实本质就是不同的爱好者编译出来的不同功能的固件，可以方便使用者刷机，还有很多爱好者提供了刷机教程、视频，方便大家学习玩耍。</p><p><a href="https://zhiyou.smzdm.com/member/3165162081/article/" target="_blank" rel="noopener">色铁的主页，介绍猫棒</a><br><a href="https://pfschina.org/wp/?p=8536" target="_blank" rel="noopener">铁血男儿的博客，讲刷机方法</a></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653137244467.png" alt="刷机方法刚出来时候我画的TTL刷机板"><br>如果你家里的光猫是GPON的，然后有带SFP口的交换机、路由器，那就可以考虑买个MA5671A或者G010SA、G010SP，但需要注意的是，这些猫棒大多用了好几年，都是老化淘汰出来的，而光电器件寿命有限，如果出现个别不稳定、断流，很可能是光头有问题，需要翻新并校准，南宁有个哥们就做这个，在咸鱼上可以找到，ID封印帝国。</p><p>另外，还有一点，别看都是SC小方口，这几款GPON的猫棒接口是用的APC口，而一般的光猫用的都是UPC口，这两个接口看着一样，但光纤的切面不一样，所以不能直接用！可能个别运气好的没问题，但运气不好，可能光纤接头就被顶坏了，需要装维师傅来维修。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653136544356.png" alt="FLAT/PC/UPC/APC接口"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653136743767.png" alt="UPC和APC的光纤对接方式"><br><strong><font color=red>所以这几款猫棒必须要配转接线或者转接头！而南天/ODI的就不需要，直接连就可以了。 </font></strong></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653142225717.png" alt="UPC转APC光纤 和 SC/UPC母转SC/APC公转接头"><br>这几款猫棒玩法和双模猫棒玩法差不多，唯一区别是不用插光纤，猫棒也可以启动可以通过网页登陆，登陆后修改LOID、vlan_id就可以拨号了，只不过不支持pppoe自己拨号，然后有需要也可以修改mac和sn等参数。</p><p>以阿瑟固件为例，192.168.1.1登陆后，第一次登陆没有密码，自己可以设置。点击菜单 GPON–&gt;信息，查看收光那里，如果显示 -infdBm 说明线没接好，接好后一般显示 -10infdBm 到 -24infdBm内的数字，如果光衰很差，先看下原来光猫的光衰才是，如果光猫正常，可能就是转接线没接好或者猫棒有问题，如果光猫的也不好，就找运营商的运维师傅处理，检查下光路。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653143996088.png" alt="阿瑟固件参数设置"><br>比如杭州电信，LOID改成光猫的，PVID就是vlan_id，设置成41，就可以拨号上网了。</p><p>下面有个爱好者测试的这三种模块的兼容情况，实际上还有很多设备都能兼容，有兴趣的读者可以自己测试。其实本质上和SFP模块兼容一样，可以通过修改识别码来进行，但这个就需要编译固件的爱好者来调整了，有关SFP模块识别码的问题，以后有空再写个文章简单讲讲。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653141854764.png" alt="网友兼容测试列表"></p><h3 id="0x31-10G猫棒"><a href="#0x31-10G猫棒" class="headerlink" title="0x31 10G猫棒"></a>0x31 10G猫棒</h3><p>因为我这边还没有10G宽带线路，测试用的OLT上也没装10G业务板，手头也没有10G猫棒，只是听说海信的7263和7267猫棒，暂时没条件测试，也就没法说啥了。10G光猫手头有个华为的HN8245Q还没拆包，也是因为没线路测试，等以后有条件测试了，再写一篇10G相关的。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653148250278.png" alt="海信7263/7267 10G猫棒"></p><h3 id="0x32-网卡强制2-5G"><a href="#0x32-网卡强制2-5G" class="headerlink" title="0x32 网卡强制2.5G"></a>0x32 网卡强制2.5G</h3><p>前面介绍的猫棒都支持2.5G模式，但连接猫棒的设备自动适配很多时候无法自动适配成2.5G，这时候就可以通过强制修改兼容模式来进行适配。另外，有一些不支持2.5G的设备在连接猫棒时候也需要强制设置成1G才可以和猫棒正常通信。</p><p>先说说BCM57xxx系列网卡，这也是被2.5G猫棒炒作起来的设备，原来咸鱼两百随便收，现在很多js都炒到三四百了，与其买这些不知道用了多久的N手货，还不如在淘宝花三百把买全新的昆鱼BCM57810网卡。【我不是昆鱼代理也没领红包，就是看不惯那些js】</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653146928459.png" alt="昆鱼BCM57810双口万兆网卡"></p><p>强制2.5G的方法很简单，就是用官方提供的工具在DOS或者UEFI命令下修改下网口的速率模式就可以了。如果用双口万兆网卡，可以1个口设置成2.5G用来接猫棒，另一个口万兆接万兆交换机组晚照局域网，这部分后面会讲。</p><p><a href="https://www.dslreports.com/forum/r32230041-Internet-Bypassing-the-HH3K-up-to-2-5Gbps-using-a-BCM57810S-NIC" target="_blank" rel="noopener">老外给的教程</a><br><a href="https://post.smzdm.com/p/awkvo2gk/" target="_blank" rel="noopener">国内爱好者教程</a></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%BA%8C%E3%80%91/1653147511157.png" alt="双口强制成2.5G的BCM57712网卡"></p><p>像iKuai、LEDE之类的软路由系统，新版本的默认支持，esxi/pve的话，可以直通给软路由虚拟机，或者安装驱动也可以支持。</p><p>不过，如果宽带就千兆，其实没太大必要折腾bcm网卡强制2.5G，这个卡发热很严重，性能也不如intel的x520和x710，从价格上都能看的出来。如果小体积的软路由，散热一般，最好不要用BCM网卡，网卡过热是会掉速度的！</p><p>2.5G光猫这波潮流，其实很多人就是盲目羡慕觉得很高大上，我开始也很新奇，为此还买了支持2.5G的TP-Linik的万兆交换机、BCM万兆网卡、光转电设备，自己还做了刷机板，但折腾到最后，还是回归到了南天ODI的猫棒，毕竟家里就千兆宽带，稳定就好。</p><p>所以，满足需求就好，稳定就好，没必要追求潮流，去钻JS的套子。</p><h3 id="0x33-小节"><a href="#0x33-小节" class="headerlink" title="0x33 小节"></a>0x33 小节</h3><p>今天就先写到这里，猫棒是少数人群的玩具，大众没必要追求，毕竟同样的数据要处理，一个小猫棒和一个大光猫，肯定会有差别的，用户根据自己的需求选择就好。</p><p>最后，如果觉得文章对你有帮助，可以请我喝杯咖啡，谢谢~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前面讲了网络架构和如何更换光猫，这里再提示下，大部分光猫的超级密码在网上都能找到解开的方法，比如导出配置文件、重置使用默认管理密码、打开telnet、绑定小翼管家查询等等。&lt;/p&gt;
&lt;h2 id=&quot;0x30-2-5G猫棒&quot;&gt;&lt;a href=&quot;#0x30-2-5G猫棒&quot; cl</summary>
      
    
    
    
    <category term="Home" scheme="http://github.white-alone.com/categories/Home/"/>
    
    
    <category term="网络" scheme="http://github.white-alone.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>家庭网络升级指南【一】</title>
    <link href="http://github.white-alone.com/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/"/>
    <id>http://github.white-alone.com/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/</id>
    <published>2022-05-13T21:09:46.000Z</published>
    <updated>2022-05-15T02:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近升级家里的网络，也拉了第二条宽带，准备对这几年折腾家庭网络做个总结，我会尽量用非专业的词汇讲的更浅显更通俗易懂一点，给大家做个参考。</p><h2 id="0x10-网络架构设计"><a href="#0x10-网络架构设计" class="headerlink" title="0x10 网络架构设计"></a>0x10 网络架构设计</h2><p>家庭网络的架构一般都比较简单，下面是最常见的架构：</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652450476695.png" alt="基本架构图"><br>这种架构最常见，然后需要注意的有几点：<br>1、家用宽带运营商送的光猫一般比较辣鸡，最好不要用它拨号同时用它的WIFI，不然用的人一多或者天气一热，就看到速度完全不达标。<br>2、除了部分地区改桥接会掉速，最好用路由器拨号，这样网速体感会好很多。<br>3、有条件的话，可以自己换光猫或者猫棒，并且买好一点的路由，具体后面会讲。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652453056748.png" alt="增强架构图"><br>很多进阶玩家会折腾软路由、插件、AP+AC、MESH网络、NAS、PT、万兆局域网等等，本系列，就是给使用基本网络架构的同学升级到增强网络架构提供参考建议。</p><h2 id="0x20-光猫升级"><a href="#0x20-光猫升级" class="headerlink" title="0x20 光猫升级"></a>0x20 光猫升级</h2><p>首先，我们从光猫开始升级，因为这是互联网的入口。</p><p>光猫是什么？简单的说，其实就是一个光纤网络的终端，俗称ONU【Optical Network Unit】，也就是接入用户家里的这一头，而另一头就接在运营商建在各个小区里的OLT【Optical Line Terminal】，也就是俗称的局端。当然，这中间可能还有分光器、放大器、再生器等各种设备，组成ODN【Optical Distribution Network】，整个网络称为PON【Passive Optical Network】，常用的有GPON【Gigabit Passive Optical Network】和EPON【Ethernet Passive Optical Network】。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652453680879.png" alt="PON网络"></p><p>OLT在酒店上网、摄像头监控等领域非常常见，所以在淘宝闲鱼也可以买到全套设备。但对于大多数同学而言，只需要关注ONU就可以了。</p><h3 id="0x21-光纤接口"><a href="#0x21-光纤接口" class="headerlink" title="0x21 光纤接口"></a>0x21 光纤接口</h3><p>一般而言，在办理宽带后，运营商的装维师傅会拉一条光纤进到房间，当然，稍微新一点的房子在建造或者装修的时候一般都已经埋好了光纤，只需要装维师傅在出口将光纤接到自己的OLT上就可以了，除非这家运营商因为某种原因没有进小区，这种情况一般在办理宽带时候业务员都会告知是否覆盖到用户地址。</p><p>宽带安装好之后，如果不知道光纤在哪里，就看看弱电箱，一般都在那里。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652454373914.png" alt="弱电箱"></p><p>在里面可以看到光猫，一般在光猫背面可以看到光纤接入的地方，有个方口的光纤。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652454552228.png" alt="光猫的光纤接入口"><br>这就是SC口，光纤的接口有很多种，遇到一种就介绍一种。<br>SC接口外壳呈矩形，紧固方式是采用插拔销闩式，不用旋转。SC连接头直接插拔，使用很方便，缺点是容易掉出来【光猫路由器交换机上用的最多】</p><p>如果想延长SC接口光纤怎么办？可以买SC法兰和SC-SC光纤。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652456595231.png" alt="SC法兰和SC-SC光纤"><br>需要注意的是，光纤通信有个很重要参数，就是光衰，就是光的衰减，如果光衰减的太厉害会影响光通信质量，所以法兰不宜多用，光衰太大会导致光猫拨不上或者不稳定。</p><p>如果家里装修要用FTTR全屋光纤，一般安装的都是SC接口的面板。里面还会用到一个非常重要的设备，就是分光器。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652455211396.png" alt="分光器"></p><p>分光器的作用很简单，就是分出多路光纤出来，常用的有1分2、1分4、1分8等，一般OLT出来的光都太强，需要接分光器或者光衰才能接光猫【我刚接触OLT时候不知道用分光器，直接接光猫一直连不上T_T】</p><p>有的地方同一个地址拉多条宽带，装维师傅也会用分光器分出多条光路，然后每路接个光猫，这种前提是OLT过来的线路比较直接，光衰不大。</p><p>再回到FTTR，这是部分地区部分高端小区才提供的一种新型网络覆盖方式，一般也就大别墅大豪宅才用的上这种方案，毕竟用的10G万兆入户。FTTR的主光猫就相当于一个小OLT，各个从光猫就是ONU，在房子里组一个小型PON网络。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652455532762.png" alt="FTTR"></p><p>但从长远考虑，新房装修，可以考虑在网线之外，再埋一条SC或者双LC口的光纤【建议用双LC，具体原因后面讲】，每个房间装个面板【其实就是法兰加个壳】，毕竟网速日新月异，曾经56K猫拨号，现在都有万兆入户了，一旦装修好了，再穿线就太麻烦了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652455999210.png" alt="双LC/SC面板"></p><h3 id="0x22-光猫更换"><a href="#0x22-光猫更换" class="headerlink" title="0x22 光猫更换"></a>0x22 光猫更换</h3><p>讲完光纤的接口，后面就是光猫了。</p><p>在B站上有很多拆解视频，有兴趣的同学可以自己去看一下。这里我就随便找一张照片：</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652512193114.png" alt="友华PT923E拆机"></p><p>可以看到光猫内部的结构其实也很简单，一个法兰接FC光纤，接到主板上左边的光电转换模组，将光信号转成电信号，主板中间是带交换的CPU和配套RAM和ROM，右边是WIFI模组。</p><p>和电脑、手机、路由器一样，既然有CPU，那就有性能上的区别，老奔腾CPU和新Xeon肯定不一样，所以，如果用千兆乃至万兆宽带，很多用户感觉网速不好不稳定，最先的瓶颈就出在光猫上！因为运营商送的光猫，一般只是能用，离好用还差很远。很多光猫甚至只有一个千兆口，其他几个都是百兆口。</p><p>那么该怎么升级光猫呢？</p><p>我们首先要知道自家的光猫是哪种模式的，是GPON还是EPON，当地运营商认证是LOID还是MAC还是SN？然后还需要知道PPPOE的账号密码，知道这些信息后，就可以升级光猫了。</p><p>LOID宽带识别码，是每一条宽带的设备识别码，在办理宽带时候，运营商会给每一条宽带在OLT上配置一个识别码，用户的光猫必须使用这个LOID识别码才可以在OLT上注册认证。查找LOID的方法有很多种，一般在光猫背面会有光猫的IP地址、账号和密码，将PC连接到光猫的LAN口上，就可以通过这个IP地址和账密登陆进去【注意，这只是普通用户，不是管理员账密】，有的光猫可以看到。如果看不到，就找装维师傅或者拨打运营商客服电话，问一下超级密码，登陆进去口，就可以看到宽带识别码LOID。【超级密码是在光猫注册成功时候OLT端下发的随机密码，每个用户的密码都不一样，所以需要找运营商，有钱烧的慌的同学也可以上咸鱼，有人在上面卖查询服务】</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652515059476.png" alt="超级密码登陆进去的电信界面"></p><p>不同地区不同的运营商有不同的要求，有的除了LOID认证之外，还需要SN或者MAC地址认证，这样的话如果要升级光猫，就需要修改新的光猫的MAC地址和SN，才能让OLT识别到光猫。具体要求可以在网上搜一下或者直接问运营商客服或者装维师傅。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652514764105.png" alt="光猫序列号和MAC地址"></p><p>在知道这些参数之后，就可以购买一个性能更强的光猫了，一般从稳定性和配置上来说：</p><p>企业级光猫 &gt; 家用光猫<br>万兆光猫 &gt; 全千兆光猫 &gt; 单千兆光猫</p><p>但具体就看用户自己按需选择，没必要买性能过剩的光猫来大炮打蚊子。在网上能搜到各种光猫的配置参数，包括cpu、内存、flash大小，也能找到很多评测报告，比如我用的华为HS8145x6外观和配置如下图：</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652520795466.png" alt="华为HS8145x6"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652515756179.png" alt="HS8145x6配置"><br>升级光猫，一般不用考虑用它的wifi，因为通常单买个更强的wifi路由才是最佳选择，毕竟光猫一般都在弱电箱，很难做到全屋wifi覆盖。当然，现在的好光猫性能都不错，很多还支持mesh，性价比还是非常高的，有的同学就用K662c组MESH。</p><p>在光猫选型时候和买手机买电脑一个道理，一般就看CPU的性能、RAM大小、光MAC速度、LAN口速度，再就是光猫的体积，毕竟一般都要塞进弱电箱，太大的不好放。另外，因为弱电箱一般都是密闭空间，散热不好，所以发热和耐热这一点也是光猫选型的重要因素之一。最后，最重要的还是价格，毕竟技术一直在进步，没必要花大价钱，太浪费了。当初升级光猫的时候，我就在B610和HS8145x6之间选择了后者，同样的CPU，但后者价格便宜了一百多。【现在已经有更好的光猫了，比如2.5G口的P812E、10G的HN8245、HN8546等等】</p><p>在选择好型号后，就可以在网上买了，不管是淘宝还是闲鱼，都有很多运营商的供货商、回收伤、装维人员家属在卖各种各样的光猫，这时候就会有很多比较眼生的词汇，比如补全Shell、原生界面、改SN、改MAC、调试服务等等。这时候不要眼花缭乱，也不要盲目听从卖家的胡扯，如果当地只需要LOID认证，就直接买全新的光猫就行，不需要补全shell那些，除非自己闲的慌想折腾，还懒得在网上找补全的方法，花钱买省事也可以。</p><p><strong><font color=red>注意: GPON和EPON虽然大多数光猫可以互换，但操作很麻烦，所以在买的时候最好不要买错! </font></strong></p><p>如果需要MAC和SN认证，如果自己不会/不想折腾，就买卖家配置好，可以通过命令修改参数的，或者干脆让卖家帮你先配好或者收到货了让他远程帮你调试。</p><p><strong>大部分光猫在网上都能找到修改的方法，如果没有动手能力和钻研精神，还是建议花钱买省事比较好</strong></p><p><strong>补全Shell：</strong> 光猫的正式系统版本一般会删掉一些Shell命令，然后一些开发人员或者售后运维人员通过升级或者刷机的的方式补全shell命令文件，这样可玩性会高很多，但光猫作为一个上网终端，不建议瞎折腾，稳定好用就好。</p><p><strong>原生界面：</strong> 光猫厂商一般有自己的web配置界面，但运营商集采一般都会要求用运营商自己的标准界面，可以通过修改文件的方式将光猫改回厂家原生界面，比如华为界面，这样会多出非常多的配置选项。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652517062868.png" alt="HG8245H 华为界面"></p><p><strong>改模式、SN和MAC：</strong> 在补全Shell后，可以telent或者ssh登陆光猫，使用命令修改EPON/GPON模式、MAC地址、SN。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652517200743.png" alt="华为光猫修改SN和MAC"></p><p>买到光猫后，就可以设置了，以杭州电信GPON为例，打开光猫的登陆页面，设备注册，选择区域为浙江，然后输入LOID，确定，就可以用默认的超级账号密码登陆了。【不同地区的默认超级密码不同】<br>账号：telecomadmin<br>密码：nE7jA%5m</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652520379592.png" alt="华为光猫注册LOID"></p><p>登陆进去可以看到已经注册成功。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652520469460.png" alt="LOID注册成功"></p><p>如果注册失败，就检查下LOID的设置是否正确，当地运营商是否绑定了光猫的SN和MAC地址。</p><p>LOID注册成功之后参照之前旧的光猫进行设置，一般要注意的是上网的VID和IPTV用的Other，个别地区可能还要设置TR069。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652520492745.png" alt="INTERNET上网VID设置"></p><p><strong><font color=red>这些配置参照老光猫设置就行，各地各运营商的VID都不一样，所以步骤可以在网上找到很多教程，但参数一定不要随便照搬教程里的！</font></strong></p><p>比如杭州电信配置上网VID是41，TR069是46，IPTV是43</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97%E3%80%90%E4%B8%80%E3%80%91/1652520531706.png" alt="配置完成后的网络侧信息"></p><p>然后在千兆口插上网线，连上WIFI路由，在WIFI路由里设置成拨号模式，然后输入自己的宽带账号密码，能正常上网就可以了。如果不能上网，就对比检查一下老光猫和新光猫，看看哪里配置不一样导致的问题。</p><p><strong><font color=red>最后，记得打开光猫的防火墙，将密码设置为强密码！ </font></strong></p><h3 id="0x23-小节"><a href="#0x23-小节" class="headerlink" title="0x23 小节"></a>0x23 小节</h3><p>今天就先写到这里，光猫作为家庭宽带的入口，安全性其实也很重要，国内就曾经出过光猫感染蠕虫被组成僵尸网络的事件。</p><p>后面还有猫棒、软路由、wifi、nas等等系列文章。</p><p>最后，如果觉得文章对你有帮助，可以请我喝杯咖啡，谢谢~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近升级家里的网络，也拉了第二条宽带，准备对这几年折腾家庭网络做个总结，我会尽量用非专业的词汇讲的更浅显更通俗易懂一点，给大家做个参考。&lt;/p&gt;
&lt;h2 id=&quot;0x10-网络架构设计&quot;&gt;&lt;a href=&quot;#0x10-网络架构设计&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="Home" scheme="http://github.white-alone.com/categories/Home/"/>
    
    
    <category term="网络" scheme="http://github.white-alone.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>IoT Craftsman论坛对外关闭</title>
    <link href="http://github.white-alone.com/IoT%20Craftsman%E8%AE%BA%E5%9D%9B%E5%AF%B9%E5%A4%96%E5%85%B3%E9%97%AD/"/>
    <id>http://github.white-alone.com/IoT%20Craftsman%E8%AE%BA%E5%9D%9B%E5%AF%B9%E5%A4%96%E5%85%B3%E9%97%AD/</id>
    <published>2022-03-26T18:18:09.000Z</published>
    <updated>2022-03-26T10:24:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>IoT Craftsman论坛开放近1年，76个注册用户，一共就发了不到10个帖子。<br>看来论坛这种形式已经没落了，IoT领域的交流论坛看来是建立不起来了。<br>考虑了一天，备份了论坛数据后，决定对外关闭。</p><p>之后也许有一天会重新开放，也许就永远的say goodbye~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;IoT Craftsman论坛开放近1年，76个注册用户，一共就发了不到10个帖子。&lt;br&gt;看来论坛这种形式已经没落了，IoT领域的交流论坛看来是建立不起来了。&lt;br&gt;考虑了一天，备份了论坛数据后，决定对外关闭。&lt;/p&gt;
&lt;p&gt;之后也许有一天会重新开放，也许就永远的say </summary>
      
    
    
    
    <category term="IoTCraftsman" scheme="http://github.white-alone.com/categories/IoTCraftsman/"/>
    
    
    <category term="IoTCraftsman" scheme="http://github.white-alone.com/tags/IoTCraftsman/"/>
    
  </entry>
  
  <entry>
    <title>Eagle秒退问题</title>
    <link href="http://github.white-alone.com/Eagle%E7%A7%92%E9%80%80%E9%97%AE%E9%A2%98/"/>
    <id>http://github.white-alone.com/Eagle%E7%A7%92%E9%80%80%E9%97%AE%E9%A2%98/</id>
    <published>2021-06-02T16:28:36.000Z</published>
    <updated>2021-06-02T09:03:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近遇到一个很奇怪的问题，在我的Yoga14s上，Eagle登录后，直接秒退。<br>一开始还以为是系统问题，因为系统里的环境最近折腾比较多，有点乱。但重装系统后，还是秒退，就有点奇怪了，不过因为重装时候装的20H2系统，之前是2004，所以今天在虚拟机里面做了个20H2的模板，测了下，正常。<br>仔细分析了下日志，报错的log，是libeay32.dll的问题，这个是老bug了，已经很久很久没遇到了。<br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Eagle%E7%A7%92%E9%80%80%E9%97%AE%E9%A2%98/1622623966526.png" alt=""></p><p>找到问题就好解决了<br><a href="https://www.dll-files.com/libeay32.dll.html" target="_blank" rel="noopener">https://www.dll-files.com/libeay32.dll.html</a><br>下载一个新的64位的libeay32.dll，替换掉就可以了。<br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Eagle%E7%A7%92%E9%80%80%E9%97%AE%E9%A2%98/1622624528028.png" alt=""></p><p>Eagle作为PCB设计软件还是很好用的，跨平台，轻量级，最大的麻烦应该是国内没代理，不好买。不过现在买Fusion360会送Eagle。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近遇到一个很奇怪的问题，在我的Yoga14s上，Eagle登录后，直接秒退。&lt;br&gt;一开始还以为是系统问题，因为系统里的环境最近折腾比较多，有点乱。但重装系统后，还是秒退，就有点奇怪了，不过因为重装时候装的20H2系统，之前是2004，所以今天在虚拟机里面做了个20H2的</summary>
      
    
    
    
    <category term="PCB" scheme="http://github.white-alone.com/categories/PCB/"/>
    
    
    <category term="硬件" scheme="http://github.white-alone.com/tags/%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Intel X710和XL710 解锁 SFP模块限定</title>
    <link href="http://github.white-alone.com/Intel%20X710%E5%92%8CXL710%E8%A7%A3%E9%94%81SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/"/>
    <id>http://github.white-alone.com/Intel%20X710%E5%92%8CXL710%E8%A7%A3%E9%94%81SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/</id>
    <published>2021-04-06T21:31:09.000Z</published>
    <updated>2021-04-06T14:40:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>万兆网口卡中，Intel X520和X710用的比较多，虽然手头有一块X710，但一直没有启用，X520挺好用的，前几天同事说X710只能用Intel的SFP模块，不能用其他的比如华为SFP模块，感觉有点意思，就研究了下，这里做下记录，测试环境是Ubuntu 18.04，其他系统版本应该差不多。</p><h1 id="解锁原理"><a href="#解锁原理" class="headerlink" title="解锁原理"></a>解锁原理</h1><p>根据intel官方的 <a href="https://www.intel.com/content/dam/w...tasheets/xl710-10-40-controller-datasheet.pdf" target="_blank" rel="noopener">X710 Datasheet</a>，在NVM中有一个配置位会控制是否开启SFP模块准入。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617716520599.png" alt=""></p><p>解锁办法很简单，就是将这个地址数据的第11位清0即可。</p><h1 id="解锁步骤"><a href="#解锁步骤" class="headerlink" title="解锁步骤"></a>解锁步骤</h1><h3 id="1、测试SFP模块是否兼容"><a href="#1、测试SFP模块是否兼容" class="headerlink" title="1、测试SFP模块是否兼容"></a>1、测试SFP模块是否兼容</h3><p>ifconfig，看下网卡名，这里是enp1s0f0和enp1s0f1，SFP模块无法识别，指示灯也不亮，没有获取到IP。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617716677558.png" alt=""></p><h3 id="2、更新固件"><a href="#2、更新固件" class="headerlink" title="2、更新固件"></a>2、更新固件</h3><p>建议更新下网卡固件到最新版本，一般会修复一些bug，更新一些功能，当前是官方最新版本是<a href="https://downloadcenter.intel.com/zh-cn/download/24769/Ethernet-Non-Volatile-Memory-NVM-Update-Utility-for-Intel-Ethernet-Network-Adapter-710-Series?product=82947" target="_blank" rel="noopener">8.30版本合集</a>。</p><p>或者单独下载<a href="https://downloadcenter.intel.com/id/download/25791/-NVM-adapters-linux-" target="_blank" rel="noopener">Linux版本</a></p><p>解压830升级包，执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nvmupdate64e</span><br></pre></td></tr></table></figure><p>如果要更详细的显示，可以执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nvmupdate64e -u -b -l -o update.xml -c nvmupdate.cfg</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617717017861.png" alt=""></p><p>如果询问是否备份时候选Y，会在当前目录下生成一个MAC地址名的文件夹，里面有备份的固件。</p><p>重启后生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmesg | grep nvm</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617717040877.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617717074873.png" alt=""></p><h3 id="3、找出修改位置"><a href="#3、找出修改位置" class="headerlink" title="3、找出修改位置"></a>3、找出修改位置</h3><p>升级完成后，可以导出固件，方法有多种，这里先讲用ethtool导出：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ethtool -e enp1s0f0 &gt; /root/nvm_830_0.txt</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617717134609.png" alt=""></p><p>检索<code>MAC地址</code>，比如检索<code>11 22 33 44 55 66</code>，在第三个地址的位置，大致如图所示：</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617717736578.png" alt=""></p><p>特征很明显，<code>0c 6b</code>就是目标位置，本质上是Datasheet中<code>6.3.24 PHY capability data structure 0 section summary table</code>的<code>0x0008</code>偏移。地址是<code>0xd280</code>，因为是16位地址，所以除以2换算得到<code>0x6940</code>。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718035605.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718049052.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718076143.png" alt=""></p><h3 id="4、修改配置位"><a href="#4、修改配置位" class="headerlink" title="4、修改配置位"></a>4、修改配置位</h3><p>国外有大咖提供了dump和改写的<a href="https://github.com/terpstra/xl710-unlocker" target="_blank" rel="noopener">工具</a></p><p>下载下来后，需要修改下源码文件。</p><p>首先看下网卡ID，Intel X710是<code>0x1572</code>，和官方介绍一致。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci -nn</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718229636.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718233820.png" alt=""></p><p>修改<code>mytool.c</code>文件，修改ID号和网卡名</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718345040.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718349781.png" alt=""></p><p>先make下，报错可以不管，会先生成<code>mytool</code>，可以用来读取nvm，读取<code>0x6940</code>地址开始的64个字节。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617719662123.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./mytool 0x6940 0x40 &gt; 0.txt</span><br><span class="line">cat 0.txt</span><br></pre></td></tr></table></figure><p>可以看到和前面ethtool导出的是一致的，都是4个，因为x710最多有4个口，地址间距是0x0e</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718422183.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718426675.png" alt=""></p><p>修改第11位为0，也就是将<code>0x6b0c</code>改为<code>0x630c</code><br><code>0110 1011 0000 1100</code><br><code>0110 0011 0000 1100</code></p><p>修改<code>mypoke.c</code>文件，修改id、网卡名、地址、间隔、目标值<br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718613413.png" alt=""></p><p><code>make</code>，然后运行<code>mypoke</code><br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718656120.png" alt=""></p><p>检查一下，四个口的配置都改了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./mytool 0x6940 0x40 &gt; 1.txt</span><br><span class="line">diff 0.txt 1.txt</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718713043.png" alt=""></p><p>重启，已经可以识别华为SFP模块了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718743822.png" alt=""></p><h3 id="5、降级与恢复"><a href="#5、降级与恢复" class="headerlink" title="5、降级与恢复"></a>5、降级与恢复</h3><p>如果修改有问题，可以通过降级再升级、恢复默认配置来修复。</p><p>在Intel官方可以搜索降级包，但需要注意的时候，必须基于当前版本，比如搜索<a href="https://www.intel.com/content/www/us/en/search.html?ws=text#q=Intel%C2%AE%20Ethernet%20Adapters%20700%20Series%20downgrade%208.30&t=Downloads&layout=table" target="_blank" rel="noopener">8.30版本降级包</a><br>关键字：<code>Intel® Ethernet Adapters 700 Series downgrade 8.30</code><br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617718876556.png" alt=""></p><p>随便下一个，比如就<code>8.30-8.00</code></p><p>和升级一样，解压，运行<code>./nvmupdate64e</code>降级，<code>./nvmupdate64e -rd</code>恢复默认配置</p><h4 id="注意：如果修改好了网卡，后续再执行恢复默认配置的操作，配置位会恢复回去，需要重新改写。"><a href="#注意：如果修改好了网卡，后续再执行恢复默认配置的操作，配置位会恢复回去，需要重新改写。" class="headerlink" title="注意：如果修改好了网卡，后续再执行恢复默认配置的操作，配置位会恢复回去，需要重新改写。"></a>注意：如果修改好了网卡，后续再执行恢复默认配置的操作，配置位会恢复回去，需要重新改写。</h4><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>升降级时候如果有备份固件，可以用hex编辑器打开看固件。</p><p>也可以直接用编程器读背面的Flash，可以读出固件改配置位完再写回去，很简单。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617719139587.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Intel_X710%E5%92%8CXL710_%E8%A7%A3%E9%94%81_SFP%E6%A8%A1%E5%9D%97%E9%99%90%E5%AE%9A/1617719226893.png" alt=""></p><p><a href="https://forums.servethehome.com/index.php?threads/unlocking-any-brand-sfp-modules-on-intel-x710.29040/" target="_blank" rel="noopener">参考网址1</a><br><a href="https://sourceforge.net/p/e1000/mailman/message/34988514/" target="_blank" rel="noopener">参考网址2</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;万兆网口卡中，Intel X520和X710用的比较多，虽然手头有一块X710，但一直没有启用，X520挺好用的，前几天同事说X710只能用</summary>
      
    
    
    
    <category term="Home" scheme="http://github.white-alone.com/categories/Home/"/>
    
    
    <category term="驱动" scheme="http://github.white-alone.com/tags/%E9%A9%B1%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>ESXi 7.0U2驱动海康威视C2000 Pro方法</title>
    <link href="http://github.white-alone.com/ESXi%207.0U2%E9%A9%B1%E5%8A%A8%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86C2000%20Pro%E6%96%B9%E6%B3%95/"/>
    <id>http://github.white-alone.com/ESXi%207.0U2%E9%A9%B1%E5%8A%A8%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86C2000%20Pro%E6%96%B9%E6%B3%95/</id>
    <published>2021-04-06T09:19:56.000Z</published>
    <updated>2022-11-26T09:20:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>ESXi 发布了7.0U2版本，bug比之前少了不少，准备尝试下，安装后发现海康威视的C2000 Pro驱动不起来，如果用之前6.7的方法，降级2个驱动，就不认网卡了。</p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>研究测试了下，直接用6.5u2的nvme驱动包替换就可以了。</p><p>1、下载 <code>VMware-VMvisor-Installer-6.5.0.update02-8294253.x86_64.iso</code>，用Dell的OEM镜像也可以 <a href="https://www.dell.com/support/home/zh-hk/drivers/driversdetails?driverid=ckc15" target="_blank" rel="noopener">VMware-VMvisor-Installer-6.5.0.update02-8294253.x86_64-DellEMC_Customized-A00.iso</a></p><p>2、ESXi 7.0U2打开ssh，进入<code>/bootbank</code>目录，备份<code>nvme_pci.v00</code>为<code>nvme_pci.v00.bak</code></p><p>3、挂载ISO，复制ISO中的<code>NVME.V00</code>到<code>/bootbank</code>目录并重命名为<code>nvme_pci.v00</code></p><p>4、重启</p><p>正确识别，可以使用。<br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_7.0U2%E9%A9%B1%E5%8A%A8%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86C2000_Pro%E6%96%B9%E6%B3%95/1617673961681.png" alt=""></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>如果只有一块SSD，可以直接封装进ISO，这样安装时候就可以识别。</p><p>海康威视的SSD没有写 WWN 码，原因自己想，但价格和质保确实挺香，作为游戏盘或者不重要的数据盘，性价比还是很高的，挂了就售后换新。</p><p>如果不是从6.7升级到7.0，ESXi 7.x新安装会自动新建一个VMFS-L分区，会占用一部分磁盘空间，解决方法可以看前一篇博文 <a href="https://blog.white-alone.com/ESXi%20%E5%B0%81%E8%A3%85I219V%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/" target="_blank" rel="noopener">《ESXi 封装I219V网卡驱动》</a></p><p>最后，升级到7.0U2后，MacOS解锁patch用<a href="https://blog.white-alone.com/ESXi%20%E5%B0%81%E8%A3%85I219V%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/" target="_blank" rel="noopener">《ESXi 封装I219V网卡驱动》</a>里的就可以</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;ESXi 发布了7.0U2版本，bug比之前少了不少，准备尝试下，安装后发现海康威视的C2000 Pro驱动不起来，如果用之前6.7的方法，</summary>
      
    
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/categories/ESXi/"/>
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/tags/ESXi/"/>
    
  </entry>
  
  <entry>
    <title>ESXi 封装I219V网卡驱动</title>
    <link href="http://github.white-alone.com/ESXi%20%E5%B0%81%E8%A3%85I219V%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/"/>
    <id>http://github.white-alone.com/ESXi%20%E5%B0%81%E8%A3%85I219V%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/</id>
    <published>2021-02-09T14:04:12.000Z</published>
    <updated>2022-11-26T09:20:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>过年时候，给老家的软路由升级了下，当时遇到一个问题，买的10代主板用的intel网卡<code>Intel I219V</code>太新，esxi驱动没有支持，虽然因为有4口网卡可以用，但板载的不能用总觉得很难受。因为网卡型号差不多，所以用带回去的nuc做了下测试，问题解决后，做了下记录。</p><h1 id="ESXi版本"><a href="#ESXi版本" class="headerlink" title="ESXi版本"></a>ESXi版本</h1><p>因为刚出来的新系统bug太多，驱动阉割太狠，所以一直还是用ESXi 6.7，这次决定尝试下7.0，搜了下当前官方最新包是<code>ESXi-7.0U1d-17551050</code>，但官方的iso版本只到<code>VMware-VCSA-all-7.0.1-17491101.iso</code>，所以决定自己打个最新的包和iso，顺带加上驱动。<br>如果电脑有多个网卡，还可以之后装驱动包，但是像NUC这种只有一个网卡的，还是需要用带驱动的iso来安装。</p><p>英特尔型号的网卡，同样型号还有代数的区别，所以需要修改驱动，这里提供一个ESXi社区版驱动包，里面还有ESXi 7.x下macos的解锁工具。</p><p><a href="https://wws.lanzous.com/b01c81eqd" target="_blank" rel="noopener">https://wws.lanzous.com/b01c81eqd</a><br>密码:5v3d</p><p>解压后的<code>vib20/ne1000-intelnuc/VMW_bootbank_ne1000-intelnuc_0.8.4-3vmw.670.0.0.8169922.vib</code>文件上传至ESXi <code>/tmp</code>文件夹</p><p>卸载新驱动，安装驱动</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">esxcli software vib <span class="type">list</span> | grep ne1000</span><br><span class="line">esxcli software vib remove -n ne1000</span><br><span class="line"></span><br><span class="line">esxcli software vib install -v /tmp/VMW_bootbank_ne1000_0<span class="number">.8</span><span class="number">.4</span><span class="number">-3</span>vmw<span class="number">.670</span><span class="number">.3</span><span class="number">.99</span><span class="number">.32543355</span>.vib</span><br></pre></td></tr></table></figure><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><h3 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h3><p>在win10 powershell里有现成的工具，直接用就行，比以前方便多了。<br><code>Install-Module -Name VMware.PowerCLI</code></p><h4 id="更改策略"><a href="#更改策略" class="headerlink" title="更改策略"></a>更改策略</h4><p><code>Set-ExecutionPolicy RemoteSigned</code></p><h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><p><a href="https://www.virten.net/vmware/vmware-esxi-image-profiles/" target="_blank" rel="noopener">https://www.virten.net/vmware/vmware-esxi-image-profiles/</a></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/NUC%E5%AE%89%E8%A3%85ESXi/1616480187303.png" alt=""></p><h3 id="打包-1"><a href="#打包-1" class="headerlink" title="打包"></a>打包</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$baseProfile</span> = <span class="string">"ESXi-7.0U1d-17551050-standard"</span></span><br><span class="line"><span class="variable">$newProfile</span> = <span class="string">"ESXi-7.0U1d-17551050-NUC"</span></span><br><span class="line"><span class="variable">$newVendor</span> = <span class="string">"white-alone.com"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Add-EsxSoftwareDepot</span> https://hostupdate.vmware.com/software/VUM/PRODUCTION/main/vmw<span class="literal">-depot</span><span class="literal">-index</span>.xml</span><br><span class="line"><span class="built_in">Export-ESXImageProfile</span> <span class="literal">-ImageProfile</span> <span class="variable">$baseProfile</span> <span class="literal">-ExportToBundle</span> <span class="literal">-filepath</span> <span class="string">"<span class="variable">$baseProfile</span>.zip"</span></span><br><span class="line"><span class="built_in">Remove-EsxSoftwareDepot</span> https://hostupdate.vmware.com/software/VUM/PRODUCTION/main/vmw<span class="literal">-depot</span><span class="literal">-index</span>.xml</span><br><span class="line"><span class="built_in">Add-EsxSoftwareDepot</span> .\<span class="string">"<span class="variable">$baseProfile</span>.zip"</span></span><br><span class="line"><span class="built_in">Add-EsxSoftwareDepot</span> .\Intel<span class="literal">-NUC</span><span class="literal">-ne1000_0</span>.<span class="number">8.4</span><span class="literal">-3vmw</span>.<span class="number">670.0</span>.<span class="number">0.8169922</span><span class="literal">-offline_bundle</span><span class="literal">-16654787</span>.zip</span><br><span class="line"><span class="built_in">New-EsxImageProfile</span> <span class="literal">-CloneProfile</span> <span class="string">"<span class="variable">$baseProfile</span>"</span> <span class="literal">-name</span> <span class="string">"<span class="variable">$newProfile</span>"</span> <span class="literal">-Vendor</span> <span class="variable">$newVendor</span></span><br><span class="line"><span class="built_in">Remove-EsxSoftwarePackage</span> <span class="literal">-ImageProfile</span> <span class="string">"<span class="variable">$newProfile</span>"</span> <span class="literal">-SoftwarePackage</span> <span class="string">"ne1000"</span></span><br><span class="line"><span class="built_in">Add-EsxSoftwarePackage</span> <span class="literal">-ImageProfile</span> <span class="string">"<span class="variable">$newProfile</span>"</span> <span class="literal">-SoftwarePackage</span> <span class="string">"ne1000-intelnuc 0.8.4-3vmw.670.0.0.8169922"</span></span><br><span class="line"><span class="built_in">Export-ESXImageProfile</span> <span class="literal">-ImageProfile</span> <span class="string">"<span class="variable">$newProfile</span>"</span> <span class="literal">-ExportToIso</span> <span class="literal">-filepath</span> <span class="string">"<span class="variable">$newProfile</span>.iso"</span></span><br><span class="line"><span class="built_in">Export-ESXImageProfile</span> <span class="literal">-ImageProfile</span> <span class="string">"<span class="variable">$newProfile</span>"</span> <span class="literal">-ExportToBundle</span> <span class="literal">-filepath</span> <span class="string">"<span class="variable">$newProfile</span>.zip"</span></span><br></pre></td></tr></table></figure><p>ESXi 6.x和7.x步骤类似，这里就不重复。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>iso直接安装即可。</p><p>如果是ESXi 7.x老版本升级，打开ssh，上传到磁盘分区，命令升级：</p><p><code>esxcli software profile update -d /vmfs/volumes/SSD1/ESXi-7.0U1d-17551050-NUC.zip -p ESXi-7.0U1d-17551050-NUC</code></p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>ESXi 7.x新安装会自动新建一个VMFS-L分区，会占用一部分磁盘空间，对于使用小容量SSD的软路由来说很坑。</p><p>两个方法，一个是先装6.7再升级到7，另一个是在安装时候，引导后看提示按下<code>Shift+O</code>键，进入命令行，在 <code>cdromBoot runweasel</code> 后输入<code>autoPartitionOSDataSize=4096</code>，然后按回车执行后续正常安装步骤。<br>或者<code>8192</code>也就是<code>8G</code>，注意大小写，回车安装即可。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>很多新主板，比如 联想P340 Tiny也是这系列新网卡，也无法认，更换驱动即可。</p><p>也可以用<code>EEUPDATE</code>读取网卡flash，改写网卡ID也可以，但这种方法不适合一般同学，没改好会改挂。另外，改写网卡MAC地址也可以用这个工具和方法。</p><p><a href="https://www.asrock.com/support/download/mactool.asp" target="_blank" rel="noopener">https://www.asrock.com/support/download/mactool.asp</a>          </p><p>1570 (1) I219V<br>15B8 (2) I219V<br>15D8 (4) I219V<br>15BE (6) I219V<br>15BC (7) I219V<br>15E0 (8) I219V<br>15E2 (9) I219V<br>0D4F (10) I219V<br>0D4D (11) I219V<br>0D55 (12) I219V<br>15FC (13) I219V<br>15FA (14) I219V<br>1A1F (16) I219V<br>1A1D (17) I219V</p><p>15B7 (2) I219-LM<br>15B9 (3) I219-LM<br>15D7 (4) I219-LM<br>15E3 (5) I219-LM</p><p>如果要增加、删减其他驱动重新打包，都可以用这个方法打包ISO。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;过年时候，给老家的软路由升级了下，当时遇到一个问题，买的10代主板用的intel网卡&lt;code&gt;Intel I219V&lt;/code&gt;太新，e</summary>
      
    
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/categories/ESXi/"/>
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/tags/ESXi/"/>
    
  </entry>
  
  <entry>
    <title>使用BladeRF或者B210快速构建4G LTE测试网</title>
    <link href="http://github.white-alone.com/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G%20LTE%E6%B5%8B%E8%AF%95%E7%BD%91/"/>
    <id>http://github.white-alone.com/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G%20LTE%E6%B5%8B%E8%AF%95%E7%BD%91/</id>
    <published>2020-11-07T20:28:36.000Z</published>
    <updated>2020-12-14T07:20:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前写了一篇<a href="https://blog.white-alone.com/%E4%BD%BF%E7%94%A8srsLTE%E6%90%AD%E5%BB%BA4G%E5%9F%BA%E7%AB%99%E7%94%A8%E4%BA%8E%E6%97%A5%E5%B8%B8%E6%B5%8B%E8%AF%95/" target="_blank" rel="noopener">《使用srsLTE搭建4G基站用于日常测试》</a>应该给大家提供了一些参考，现在做一个简单的更新，方便新手能够更方便快捷的搭建测试网络，用于安全审计或者其他相关测试工作。</p><h1 id="0x10-准备工作"><a href="#0x10-准备工作" class="headerlink" title="0x10 准备工作"></a>0x10 准备工作</h1><p>首先，需要一台电脑，最好新一点、配置高一点，不是说老旧电脑不能用，只不过可能会遇到一些性能瓶颈或者一些莫名其妙的问题，当然，也不推荐太新的，有可能有驱动兼容问题，比如我买的联想小新13 PRO，R7-4800U性能非常赞，但Linux下的驱动有兼容性问题，坑了我很久。</p><p>建议使用物理机直接进行部署测试，USB口选择使用主板上带的而不是USB Hub引出的，这样可以避免很多莫名其妙的问题。如果实在不允许，用虚拟机也可以，但稳定性不能保证。使用虚拟机建议使用VMware新版本，当前是16.x，不建议使用古董版本。新建虚拟机一定注意需要在设置里将USB口设置为3.x，并安装VMware Tool，开源的或者内置的都可以。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604805003757.png" alt="VMware虚拟机USB设置"></p><p>系统建议Ubuntu 18.04，如果追新用Ubuntu 20.04也可以。这里使用Ubuntu 18.04进行演示。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604755245765.png" alt="Ubuntu 18.04"></p><p>其次，需要全双工SDR，比较常用的USRP、BladeRF、LimeSDR都可以，这里以USRP B210和BladeRF x40为例。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604754303306.png" alt="BladeRF x40/x115"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604805452037.png" alt="USRP B210"></p><p>再次，两根4G天线、SIM测试白卡、写卡器也是需要的。<br><strong>注意，三大运营商的SIM卡，也就是平时使用的移动、联通、电信卡是无法接入的！</strong></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604754604958.png" alt="4G天线/测试白卡/写卡器/BladeRF"></p><p>最后，测试手机，虽然可能需要测试的是车机，是手表，是各种物联网设备，但在网络搭建完成之前，最好用手机进行测试。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604754944063.png" alt="4G路由/测试手机/4G模组"></p><h1 id="0x20-环境部署"><a href="#0x20-环境部署" class="headerlink" title="0x20 环境部署"></a>0x20 环境部署</h1><p>设备都准备完毕后，就可以进行部署安装了。所有操作都是在root用户或者root权限下进行。</p><h3 id="0x21-安装低延迟内核"><a href="#0x21-安装低延迟内核" class="headerlink" title="0x21 安装低延迟内核"></a>0x21 安装低延迟内核</h3><p>这一步不是必须，但低延迟内核同样能提升环境稳定性，尤其是电脑配置不高，或者使用虚拟机的情况下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y linux-image-`uname -r | cut -d- -f1-2`-lowlatency</span><br><span class="line">apt-get install -y linux-headers-`uname -r | cut -d- -f1-2`-lowlatency</span><br></pre></td></tr></table></figure><p>或者从官网下载对应版本的deb进行安装：<br><a href="https://kernel.ubuntu.com/~kernel-ppa/mainline" target="_blank" rel="noopener">https://kernel.ubuntu.com/~kernel-ppa/mainline</a></p><p>安装完成后，重启系统加载新内核</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604805556853.png" alt="使用低延迟内核"></p><h3 id="0x22-设置CPU为性能模式"><a href="#0x22-设置CPU为性能模式" class="headerlink" title="0x22 设置CPU为性能模式"></a>0x22 设置CPU为性能模式</h3><p>这一步也不是必须，主要针对电脑配置不高的情况。</p><p>如果只是临时调整：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install cpufrequtils </span><br><span class="line">cpufreq-set -g performance</span><br></pre></td></tr></table></figure><p>如果希望重启后保持【可能不起作用】：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install sysfsutils </span><br><span class="line">vim /etc/sysfs.conf </span><br><span class="line"></span><br><span class="line">devices/system/cpu/cpu0/cpufreq/scaling_governor = performance</span><br></pre></td></tr></table></figure><h3 id="0x23-安装SDR驱动"><a href="#0x23-安装SDR驱动" class="headerlink" title="0x23 安装SDR驱动"></a>0x23 安装SDR驱动</h3><p>安装依赖包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install libboost-all-dev libusb-1.0-0-dev python-cheetah doxygen python-docutils g++ cmake python-setuptools python-mako python-pip python-requests cmake libfftw3-dev libmbedtls-dev libboost-program-options-dev libconfig++-dev libsctp-dev libmbedtls-dev libzmq3-dev libboost-system-dev libboost-test-dev libboost-thread-dev libqwt-qt5-dev qtbase5-dev</span><br></pre></td></tr></table></figure><h4 id="如果使用USRP："><a href="#如果使用USRP：" class="headerlink" title="如果使用USRP："></a>如果使用USRP：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/EttusResearch/uhd</span><br><span class="line">cd uhd/host</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ../</span><br><span class="line">make -j8</span><br><span class="line">make test</span><br><span class="line">make install</span><br><span class="line">ldconfig</span><br></pre></td></tr></table></figure><p>如果想安装其他版本UHD，可以参考<a href="https://blog.white-alone.com/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/" target="_blank" rel="noopener">《安装任意版本UHD驱动》</a>。</p><p>安装完成UHD后，还需要下载image镜像，这一步最好需要挂代理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uhd_images_downloader</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604757318036.png" alt="下载uhd_images"></p><p>如果没有代理挂载，可以从官网下载对应版本压缩包，之后解压到 “/usr/local/share/uhd/images” 目录。</p><p>官网：<a href="http://files.ettus.com/binaries/images/" target="_blank" rel="noopener">http://files.ettus.com/binaries/images/</a></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604757378212.png" alt="官网image下载"></p><p>插上USRP B210，使用 “uhd_find_devices” 和 “uhd_usrp_probe” 命令测试是否正常：</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604757516177.png" alt="USRP测试"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604757574981.png" alt="USRP测试"></p><h4 id="如果使用BladeRF-x40或者x115："><a href="#如果使用BladeRF-x40或者x115：" class="headerlink" title="如果使用BladeRF x40或者x115："></a>如果使用BladeRF x40或者x115：</h4><p>安装SoapySDR：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/pothosware/SoapySDR.git</span><br><span class="line">cd SoapySDR</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ..</span><br><span class="line">make -j8</span><br><span class="line">make install</span><br><span class="line">ldconfig </span><br><span class="line">SoapySDRUtil --info</span><br></pre></td></tr></table></figure><p>安装BladeRF，这里最好也要挂梯子，因为编译时候会下载一些依赖：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Nuand/bladeRF</span><br><span class="line">cd bladeRF/host</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ..</span><br><span class="line">make -j8</span><br><span class="line">make install</span><br><span class="line">ldconfig</span><br></pre></td></tr></table></figure><p>安装完成后，插上bladeRF使用 “bladeRF-cli -i” 测试一下，如果没插DC电源可能会有警告，无视即可：</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604759373045.png" alt="bladeRF测试"></p><h3 id="0x24-安装srsLTE"><a href="#0x24-安装srsLTE" class="headerlink" title="0x24 安装srsLTE"></a>0x24 安装srsLTE</h3><p>驱动安装完毕后，就可以开始安装srsLTE，建议用源码安装。</p><h4 id="如果使用apt安装："><a href="#如果使用apt安装：" class="headerlink" title="如果使用apt安装："></a>如果使用apt安装：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add-apt-repository ppa:srslte/releases</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install srslte -y</span><br></pre></td></tr></table></figure><h4 id="如果使用源码安装："><a href="#如果使用源码安装：" class="headerlink" title="如果使用源码安装："></a>如果使用源码安装：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/srsLTE/srsLTE.git</span><br><span class="line">cd srsLTE</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ../</span><br><span class="line">make -j8</span><br><span class="line">make install</span><br><span class="line">ldconfig</span><br></pre></td></tr></table></figure><p>如果电脑配置高，想使用GUI：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/srsLTE/srsGUI.git</span><br><span class="line">cd srsGUI</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ../</span><br><span class="line">make -j8</span><br><span class="line">make install</span><br><span class="line">ldconfig</span><br></pre></td></tr></table></figure><h3 id="0x25-修改配置文件"><a href="#0x25-修改配置文件" class="headerlink" title="0x25 修改配置文件"></a>0x25 修改配置文件</h3><p>先生成默认配置文件，参数使用”user”会讲配置文件生成到用户路径”~/.config/srsLTE/“，参数使用”service”则会生成到”/etc/srsLTE”路径，这里使用”user”：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srslte_install_configs.sh user</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604759794508.png" alt="生成默认配置文件"></p><p>配置网络接口，使用”ifconfig”看下网口，选择出口网关的网口编号，这里是ens33：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srsepc_if_masq.sh ens33</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604759843056.png" alt="设置网络出口"></p><p>修改epc配置文件：<br>vi /root/.config/srslte/epc.conf</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604760705991.png" alt="epc配置文件"></p><p>这里默认即可，不要随意乱改，影响运营商正常通信！至于其他要调速度、MIMO等等，读者可以自行参考官网，对于新手没必要修改。</p><p>apn是上网所需，这里名称是 “srsapn”</p><p>添加准入SIM卡，按需添加，这里直接新增了10张：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vi /root/.config/srslte/user_db.csv</span><br><span class="line"></span><br><span class="line">ue3,mil,001010000000001,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,000000001234,7,dynamic</span><br><span class="line">ue4,mil,001010000000002,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,000000001234,7,dynamic</span><br><span class="line">ue5,mil,001010000000003,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,000000001234,7,dynamic</span><br><span class="line">ue6,mil,001010000000004,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,0000000020e9,7,dynamic</span><br><span class="line">ue7,mil,001010000000005,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,000000001234,7,dynamic</span><br><span class="line">ue8,mil,001010000000006,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,000000002251,7,dynamic</span><br><span class="line">ue9,mil,001010000000007,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,000000001234,7,dynamic</span><br><span class="line">ue10,mil,001010000000008,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,000000001234,7,dynamic</span><br><span class="line">ue11,mil,001010000000009,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,000000001234,7,dynamic</span><br><span class="line">ue12,mil,001010000000010,00112233445566778899aabbccddeeff,opc,000102030405060708090a0b0c0d0e0f,9001,000000001234,7,dynamic</span><br></pre></td></tr></table></figure><p>字段的涵义在配置文件中有，这里不多做解释：</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604760103812.png" alt="终端配置文件字段"></p><h3 id="0x26-写白卡"><a href="#0x26-写白卡" class="headerlink" title="0x26 写白卡"></a>0x26 写白卡</h3><p>之后用 “SIM Personnalize tools” 配合读卡器，把添加的卡的信息写入白卡，这里举3张卡为例：</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604758893494.png" alt="写白卡1"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604758928611.png" alt="写白卡2"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604759115920.png" alt="写白卡3"></p><p>可以看到，几张卡不同地方，主要是ICCID、IMSI和MSISDN，如果更多的卡也一样，和前面的配置文件中内容对应即可。其中SPN叫 “5G Test” 是因为我有5G基站用于5G测试也是用这个卡，读者可以自行定义成”4G Test”或者其他名称。</p><h1 id="0x30-测试"><a href="#0x30-测试" class="headerlink" title="0x30 测试"></a>0x30 测试</h1><p>将写卡的测试卡装入测试手机或者其他待测设备后，启动服务即可。当然，最好是在屏蔽房或者屏蔽箱里面进行测试，防止影响他人。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604760633296.png" alt="启动EPC"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604798059783.png" alt="使用bladeRF启动ENB"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604800204757.png" alt="使用USRP B210启动ENB"></p><p>可以看到手机已经连上基站了，如果没有连上，切到飞行模式再切回来，或者重启手机。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604799378792.png" alt="iPhoneX接入"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604799655625.png" alt="小米10 5G青春版接入"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604799975743.png" alt="一加8 Pro接入"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604799902240.png" alt="华为Mate30 Pro 5G"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604799817809.png" alt="华为4G路由接入"></p><p>在设备接入过程中，可以看到日志。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604799513348.png" alt="EPC窗口日志"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604799543689.png" alt="ENB窗口日志"></p><p>手机或者测试设备接入后，如果无法上网，就需要修改下APN设置，修改为前面介绍 “epc.conf” 配置文件中设置的”srsapn”，修改后一定记得保存！修改完成后，就可以上网了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604800727367.png" alt="华为Mate 30 Pro 5G修改APN"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604800757295.png" alt="手机浏览器上网"></p><h1 id="0x40-数据抓包和日志"><a href="#0x40-数据抓包和日志" class="headerlink" title="0x40 数据抓包和日志"></a>0x40 数据抓包和日志</h1><p>如果想看更详细的日志怎么办？</p><p>如果只是看流量，用wireshark直接抓srsepc核心网出口”srs_spgw_sgi”即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add-apt-repository ppa:wireshark-dev/stable</span><br><span class="line">sed -i "s#http://ppa.launchpad.net#https://launchpad.proxy.ustclug.org#g" /etc/apt/sources.list.d/*</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install iperf wireshark tcpdump</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604801936936.png" alt="wireshark抓包"></p><p>srsLTE也自带抓包功能，包括信令数据，在配置文件中有开关，打开即可，比如EPC配置：</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604801614706.png" alt="EPC抓包配置开关"></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604801444046.png" alt="ENB抓包配置开关"></p><p>此外，还有log文件，配置文件中默认设置在”/tmp/epc.log”和”/tmp/enb.log”。</p><p>如果要开启图形，也同样是修改配置文件，不过对于大多数人，开启图形价值不大，徒增负载而已。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604802303904.png" alt="ENB图形配置开关"></p><h1 id="0x50-QA"><a href="#0x50-QA" class="headerlink" title="0x50 QA"></a>0x50 QA</h1><h3 id="0x51-重启后无法上网"><a href="#0x51-重启后无法上网" class="headerlink" title="0x51 重启后无法上网"></a>0x51 重启后无法上网</h3><p>1、每次重启电脑后，都需要执行iptables脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srsepc_if_masq.sh ens33</span><br></pre></td></tr></table></figure><p>2、 手机需要设置APN，不设置无法上网</p><p>3、检查DNS设置是否正确</p><h3 id="0x52-手机无法接入"><a href="#0x52-手机无法接入" class="headerlink" title="0x52 手机无法接入"></a>0x52 手机无法接入</h3><p>1、请确认/root/.config/srslte/user_db.csv中配置文件和写的白卡是否对应</p><p>2、请确认手机是否支持对应频点，尤其是修改过plmn和频点的配置文件</p><h3 id="0x53-如何修改PLMN"><a href="#0x53-如何修改PLMN" class="headerlink" title="0x53 如何修改PLMN"></a>0x53 如何修改PLMN</h3><p>1、修改epc配置文件和enb配置文件中mcc和mnc即可。</p><p>2、SIM卡配置需要进行对应修改，或者手动选择基站入网。</p><p><strong>注意：如果要修改到当前运营商的plmn，请在屏蔽房或者屏蔽箱测试！干扰其他正常设备通信，是违法行为！</strong></p><h3 id="0x54-能否像2G时代一样轻易劫持其他人手机"><a href="#0x54-能否像2G时代一样轻易劫持其他人手机" class="headerlink" title="0x54 能否像2G时代一样轻易劫持其他人手机"></a>0x54 能否像2G时代一样轻易劫持其他人手机</h3><p>不可以，4G是双向鉴权，即使把其他手机吸入，也会因为鉴权不通过而无法入网。而运营商是能发现的，会当伪基站处理。伪基站是怎么处理的，可以百度下！银手镯不好玩！</p><p><strong>所以，一定不要zuo，no zuo no die！</strong></p><h1 id="0x60-结语"><a href="#0x60-结语" class="headerlink" title="0x60 结语"></a>0x60 结语</h1><p>在2G退网，GSM/GPRS逐渐被淘汰的今天，4G LTE是主流，在IoT、移动相关测试中，有一套4G测试环境，能极大的方便工作的开展。毕竟4G不像Wifi，运营商不会给你接口来抓包和调试。</p><p>srsLTE相比OAI，部署简单，方便好用。</p><p>如果想测试5G，目前简单好用的是传奇大神Fabrice Bellard开发的Amarisoft，可以联系国内代理Geeflex，技术支持超一流，有自己开发的图形界面，使用非常非常方便！<br>【不用觉得原厂更便宜更好，浪费时间，一是价格不会更低，二是技术支持别想了，有时差且大神很忙，最后，联系法国也会转回到国内代理】<br>官网：<a href="https://www.geeflex.com/" target="_blank" rel="noopener">https://www.geeflex.com/</a><br>邮箱：<a href="mailto:sales@geeflex.com">sales@geeflex.com</a><br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E4%BD%BF%E7%94%A8BladeRF%E6%88%96%E8%80%85B210%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA4G_LTE%E6%B5%8B%E8%AF%95%E7%BD%91/1604803551018.png" alt="Geeflex"><br>Amarisoft的测试环境确实好用，4G/NB-IoT/Cat.1/5G NSA/5G SA都支持，性能爆棚，但毕竟是商业软件，授权价格昂贵【大神也要生活】，单一功能的丐版也得小10W，高性能版本没有几十万的预算就不用考虑了，所以，有条件，有需求，可以采购，没有需求，用srsLTE就够了。</p><p>PS：联系Geeflex时候可以报暗号，也就是我的ID “孤独小白”</p><p>最后，如果想购买bladeRF，推荐一家淘宝店，到手即用：</p><p><a href="https://item.taobao.com/item.htm?spm=a1z10.3-c-s.w4002-22096541792.45.26c77cddkAN5P6&amp;id=615846456252" target="_blank" rel="noopener">https://item.taobao.com/item.htm?spm=a1z10.3-c-s.w4002-22096541792.45.26c77cddkAN5P6&amp;id=615846456252</a></p><p>如果想购买USRP B210，推荐老哥参照官网pdf原理图自己画板设计的USRP，加了很多改进，以后还会有其他SDR产品，更加给力：</p><p><a href="https://item.taobao.com/item.htm?spm=a1z10.1-c-s.w4004-2643080446.32.6b877b23OkzDxO&amp;id=627011883760" target="_blank" rel="noopener">https://item.taobao.com/item.htm?spm=a1z10.1-c-s.w4004-2643080446.32.6b877b23OkzDxO&amp;id=627011883760</a></p><p><strong>不是抄板，不是抄板，不是抄板，重要事项说三遍</strong></p><p>对比过市面上其他的，老哥的这款是最好的，毕竟专业！</p><p><strong>最重要的是，报暗号，也就是我的ID：孤独小白，至少优惠100RMB！</strong></p><p>可以看下老哥店铺：<br><a href="http://tqtt.taobao.com/" target="_blank" rel="noopener">http://tqtt.taobao.com/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前写了一篇&lt;a href=&quot;https://blog.white-alone.com/%E4%BD%BF%E7%94%A8srsLTE%E6%90%AD%E5%BB%BA4G%E5%9F%BA%E7%AB%99%E7%94%A8%E4%BA%8E%E6%97%A5%E5%</summary>
      
    
    
    
    <category term="Radio" scheme="http://github.white-alone.com/categories/Radio/"/>
    
    
    <category term="无线" scheme="http://github.white-alone.com/tags/%E6%97%A0%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>安装任意版本UHD驱动</title>
    <link href="http://github.white-alone.com/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/"/>
    <id>http://github.white-alone.com/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/</id>
    <published>2020-10-30T20:13:00.000Z</published>
    <updated>2020-11-07T13:02:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在测试SDR需要用到不同版本UHD驱动，这里做下记录。</p><p>也可以看官网：<a href="https://files.ettus.com/manual/page_build_guide.html" target="_blank" rel="noopener">https://files.ettus.com/manual/page_build_guide.html</a></p><h1 id="0x01-编译环境准备"><a href="#0x01-编译环境准备" class="headerlink" title="0x01 编译环境准备"></a>0x01 编译环境准备</h1><p>当前使用ubuntu 18.04系统，安装工具：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="built_in">get</span> install libboost-<span class="keyword">all</span>-dev libusb-<span class="number">1.0</span>-<span class="number">0</span>-dev <span class="keyword">python</span>-cheetah doxygen <span class="keyword">python</span>-docutils g++ cmake <span class="keyword">python</span>-setuptools <span class="keyword">python</span>-mako</span><br></pre></td></tr></table></figure><p>下载源码：<br>可以从ettus下载：<br><a href="https://files.ettus.com/binaries/uhd/src/" target="_blank" rel="noopener">https://files.ettus.com/binaries/uhd/src/</a><br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/1604061648426.png" alt=""></p><p>也可以从github下载源码包：<br><a href="https://github.com/EttusResearch/uhd/tags" target="_blank" rel="noopener">https://github.com/EttusResearch/uhd/tags</a><br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/1604061846531.png" alt=""></p><p>当然，也可以直接git下载，然后切换版本，比如需要用3.10.2：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/EttusResearch/uhd.git</span><br><span class="line">git <span class="keyword">tag</span></span><br><span class="line">git checkout release_003_010_002_000</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/1604062173296.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/1604062293996.png" alt=""></p><h1 id="0x02-编译安装"><a href="#0x02-编译安装" class="headerlink" title="0x02 编译安装"></a>0x02 编译安装</h1><p>可以开始编译了，这里就看CPU了，性能越好编译越快：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cd</span> <span class="string">uhd</span></span><br><span class="line"><span class="attr">cd</span> <span class="string">host &amp;&amp; mkdir build </span></span><br><span class="line"><span class="attr">cd</span> <span class="string">build </span></span><br><span class="line"><span class="attr">cmake</span> <span class="string">../</span></span><br><span class="line"><span class="attr">make</span> <span class="string">-j8</span></span><br><span class="line"><span class="attr">make</span> <span class="string">test   </span></span><br><span class="line"><span class="attr">make</span> <span class="string">install </span></span><br><span class="line"><span class="attr">ldconfig</span></span><br></pre></td></tr></table></figure><p>编译完成后下载镜像即可，这里建议上梯子，不然会经常断或者慢到你怀疑人生，用全局也行，用proxychain4类似的代理工具也可以。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">uhd_images_downloader</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/1604065031586.png" alt=""></p><p>镜像下载完成后，就可以愉快的使用USRP了！</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">uhd_usrp_probe</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/1604065101008.png" alt=""></p><h1 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03 结语"></a>0x03 结语</h1><p>很多SDR软件对UHD版本有要求，版本不对应或许可以用，但稳定性和性能可能不佳，如果对比uhd源码，可以看到各个版本之间的差异性还是很大的，所以最好使用软件推荐的UHD版本，配合低延迟内核。</p><p>最后，划重点，推荐老哥参照官网pdf原理图自己画板设计的USRP，加了很多改进，以后还会有其他SDR产品，更加给力：</p><p><a href="https://item.taobao.com/item.htm?spm=a1z10.1-c-s.w4004-2643080446.32.6b877b23OkzDxO&amp;id=627011883760" target="_blank" rel="noopener">https://item.taobao.com/item.htm?spm=a1z10.1-c-s.w4004-2643080446.32.6b877b23OkzDxO&amp;id=627011883760</a></p><p><strong>不是抄板，不是抄板，不是抄板，重要事项说三遍</strong></p><p>对比过市面上其他的，老哥的这款是最好的，毕竟专业！</p><p><strong>最重要的是，报暗号，也就是我的ID：孤独小白，至少优惠100RMB！</strong></p><p>可以看下老哥店铺：<br><a href="http://tqtt.taobao.com/" target="_blank" rel="noopener">http://tqtt.taobao.com/</a><br>500M逻辑分析仪、编程器、zynq开发板，都是做了很多年的，之前文章也有推荐过老哥设计的逻辑分析仪，性能非常好！</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/1604066023864.png" alt=""><br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E5%AE%89%E8%A3%85%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%ACUHD%E9%A9%B1%E5%8A%A8/1604066042842.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在测试SDR需要用到不同版本UHD驱动，这里做下记录。&lt;/p&gt;
&lt;p&gt;也可以看官网：&lt;a href=&quot;https://files.ettus.com/manual/page_build_guide.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;</summary>
      
    
    
    
    <category term="Radio" scheme="http://github.white-alone.com/categories/Radio/"/>
    
    
    <category term="无线" scheme="http://github.white-alone.com/tags/%E6%97%A0%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 20.04安装GnuRadio</title>
    <link href="http://github.white-alone.com/Ubuntu%2020.04%E5%AE%89%E8%A3%85GNURadio/"/>
    <id>http://github.white-alone.com/Ubuntu%2020.04%E5%AE%89%E8%A3%85GNURadio/</id>
    <published>2020-09-10T13:23:32.000Z</published>
    <updated>2020-09-13T05:40:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h2><p>因为驱动问题，把新买的联想小新13 Pro锐龙版装了Ubuntu 20.04，用了下感觉还不错，内核升级到5.6.x或者5.7.x，驱动也还行，屏幕亮度那些都能控制，之后就把几台机器的系统都升级到Ubuntu 20.04了。<br>另外，AMD Yes，四千多买的R7-4800U 16G 512G的配置，性能真没的说，杠杠的！ssd换成1T的后【没舍得上2T/4T】，Win10LTSC/Ubuntu 20.04/Kali/Ubuntu 18.04四系统，很不错。</p><h2 id="0x02-准备"><a href="#0x02-准备" class="headerlink" title="0x02 准备"></a>0x02 准备</h2><p>Ubuntu 20.04下用root账户挺麻烦的很多程序用起来挺麻烦的，用普通用户更简单点。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install git cmake g++ libboost-<span class="keyword">all</span>-dev libgmp-dev swig <span class="keyword">python3</span>-numpy \</span><br><span class="line"><span class="keyword">python3</span>-mako <span class="keyword">python3</span>-sphinx <span class="keyword">python3</span>-lxml doxygen libfftw3-dev \</span><br><span class="line">libsdl1.<span class="number">2</span>-dev libgsl-dev libqwt-qt5-dev libqt5opengl5-dev <span class="keyword">python3</span>-pyqt5 \</span><br><span class="line">liblog4cpp5-dev libzmq3-dev <span class="keyword">python3</span>-yaml <span class="keyword">python3</span>-click <span class="keyword">python3</span>-click-plugins \</span><br><span class="line"><span class="keyword">python3</span>-zmq <span class="keyword">python3</span>-scipy <span class="keyword">python3</span>-gi <span class="keyword">python3</span>-gi-cairo gobject-introspection gir1.<span class="number">2</span>-gtk-<span class="number">3.0</span> <span class="keyword">python3</span>-pip \</span><br><span class="line">gnome-tweak-tool psensor conky</span><br></pre></td></tr></table></figure><p>chrome比较好用，可以装一个</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//<span class="keyword">dl</span>.google.<span class="keyword">com</span>/linux/direct/google-chrome-stable_current_amd64.<span class="keyword">deb</span></span><br><span class="line">sudo dpkg -i google-chrome-stable_current_amd64.<span class="keyword">deb</span></span><br></pre></td></tr></table></figure><p>梯子就不用说了，甚多软件安装都需要</p><h2 id="0x03-安装"><a href="#0x03-安装" class="headerlink" title="0x03 安装"></a>0x03 安装</h2><p>Ubuntu 20.04用apt安装就是3.8.1，比pybombs省事，所以一般用apt就行了。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install hackrf <span class="keyword">gr</span>-limesdr limesuite bladerf airspy <span class="keyword">gr</span>-iio rtl-<span class="number">433</span> rtl-sdr <span class="keyword">gr</span>-osmosdr gqrx-sdr uhd-soapysdr libuhd-dev <span class="keyword">gr</span>-radar uhd-host</span><br></pre></td></tr></table></figure><p>还要下载uhd的images，这里没梯子会经常卡住，可以考虑把整个uhd镜像做一个到本地这样比较省事</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">uhd_images_downloader</span></span><br></pre></td></tr></table></figure><p>安装完成就可以愉快地玩耍了<br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/Ubuntu_20.04%E5%AE%89%E8%A3%85GNURadio/1599720676979.png" alt=""></p><h2 id="0x04-工具"><a href="#0x04-工具" class="headerlink" title="0x04 工具"></a>0x04 工具</h2><p>audacity必须的</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:ubuntuhandbook1/audacity</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install audacity</span><br></pre></td></tr></table></figure><p>玩gps的话gps-sdr-sim安一个</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span></span><br><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/osqzss/gps-sdr-<span class="keyword">sim</span>.git</span><br><span class="line"><span class="keyword">cd</span> gps-sdr-<span class="keyword">sim</span></span><br><span class="line"><span class="keyword">make</span></span><br></pre></td></tr></table></figure><p>wireshark需要的话安一个</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:wireshark-dev/stable</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install wireshark</span><br></pre></td></tr></table></figure><p>安装inspectrum和dspectrum</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install inspectrum</span><br><span class="line"><span class="keyword">cd</span></span><br><span class="line">git clone https:<span class="string">//github.com/tresacton/dspectrum.git</span></span><br><span class="line"><span class="keyword">cd</span> dspectrum</span><br><span class="line">sudo chmod +x <span class="string">./dspectrum</span></span><br><span class="line">sudo gem install colorize</span><br><span class="line">sudo cp <span class="string">./dspectrum</span> <span class="string">/usr/local/bin/</span></span><br></pre></td></tr></table></figure><p>安装urh</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install <span class="keyword">python3</span>-numpy <span class="keyword">python3</span>-psutil <span class="keyword">python3</span>-zmq <span class="keyword">python3</span>-pyqt5 g++ libpython3-dev <span class="keyword">python3</span>-pip cython3</span><br><span class="line">sudo <span class="keyword">python3</span> -<span class="keyword">m</span> pip install urh</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0x01-前言&quot;&gt;&lt;a href=&quot;#0x01-前言&quot; class=&quot;headerlink&quot; title=&quot;0x01 前言&quot;&gt;&lt;/a&gt;0x01 前言&lt;/h2&gt;&lt;p&gt;因为驱动问题，把新买的联想小新13 Pro锐龙版装了Ubuntu 20.04，用了下感觉还不错，内核</summary>
      
    
    
    
    <category term="Radio" scheme="http://github.white-alone.com/categories/Radio/"/>
    
    
    <category term="软件无线电" scheme="http://github.white-alone.com/tags/%E8%BD%AF%E4%BB%B6%E6%97%A0%E7%BA%BF%E7%94%B5/"/>
    
    <category term="无线" scheme="http://github.white-alone.com/tags/%E6%97%A0%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>软路由配置</title>
    <link href="http://github.white-alone.com/%E8%BD%AF%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE/"/>
    <id>http://github.white-alone.com/%E8%BD%AF%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE/</id>
    <published>2020-08-26T13:47:32.000Z</published>
    <updated>2020-08-28T13:56:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x10-什么是软路由"><a href="#0x10-什么是软路由" class="headerlink" title="0x10 什么是软路由"></a>0x10 什么是软路由</h1><p>软路由是指利用台式机或服务器配合软件形成路由解决方案，主要靠软件的设置，达成路由器的功能；而硬路由则是以特有的硬设备，包括处理器、电源供应、嵌入式软件，提供设定的路由器功能。</p><p>一般软路由都是x86架构，而硬路由基本都是MIPS/ARM等架构。也有软路由系统厂商出的一些非x86架构的软路由，比如Mikrotik。</p><p>所以软路由可以用老PC机、工控机来做，如果有条件也可以买专业的软路由，虽然也基本都是多网口的工控机。</p><h1 id="0x20-为什么需要软路由"><a href="#0x20-为什么需要软路由" class="headerlink" title="0x20 为什么需要软路由"></a>0x20 为什么需要软路由</h1><p>大部分童鞋家里都有硬路由，甚至几千块的高端路由，但很多情况下，硬路由并不能满足需求，还是需要软路由</p><p>如果家里带宽超过500M，建议用软路由，低端硬路由跑不满。<br>如果家里有多条宽带要做合并，建议用软路由。<br>如果用高速梯子，建议用软路由。<br>如果终端设备比较多，有个几十上百，建议用软路由。<br>如果需要各种杂七杂八的插件，建议用软路由。<br>如果需要路由之外更多功能，建议用软路由。<br>如果需要做QoS等各种网络限制，建议用软路由。</p><p>当然，相比硬路由，软路由一般成本都比较高，不过也看对比，高端硬路由比低端软路由贵多了。</p><p>如果有淘汰的老机器，比如以前的赛扬、奔腾的老机器，再插块网卡就能当软路由，不过就是功耗大了点，体积大了点。笔记本的话，一般上个usb网卡或者mini pcie转出来的网卡也能用。</p><p>有个视频可以看看：<br><a href="https://www.youtube.com/watch?v=ilcXa6D6Kjw" target="_blank" rel="noopener">https://www.youtube.com/watch?v=ilcXa6D6Kjw</a></p><h1 id="0x30-软路由硬件选型"><a href="#0x30-软路由硬件选型" class="headerlink" title="0x30 软路由硬件选型"></a>0x30 软路由硬件选型</h1><p>看自己的需求，如果就200M带宽，那J1900的软路由就可以，内存有个2G、SSD 16G足够，直接PVE或者裸机LEDE，ROS、爱快、海蜘蛛也行。</p><p>如果500M以上，建议3865U/3965U，可以物理LEDE，但PVE/ESXi更合适。当然，如果上i3/i5/i7的也没问题。或者搞个联想M920X，性能杠杠的，就是价格有点小贵。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E8%BD%AF%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE/1598425558975.png" alt=""></p><p>网口用intel最佳，螃蟹卡也凑合能用。有2个足够，其他的网口可以用交换机扩展，当然如果4个/6个网口更好，交换机可以省掉。</p><h1 id="0x40-软路由系统选择"><a href="#0x40-软路由系统选择" class="headerlink" title="0x40 软路由系统选择"></a>0x40 软路由系统选择</h1><p>一般企业用途用ROS、海蜘蛛、爱快都不错。个人用LEDE比较好。<br>可以直接裸机装，但如果硬件性能不错，还是走ESXi/PVE比较好，个人喜欢ESXi，兼容性好一些，性能也不错，PVE说是轻量级，但很多人对比测试过，不比ESXi强多少，但稳定性和兼容性比ESXi还是差一些。</p><p>有个ESXi和PVE对比：<br><a href="https://www.youtube.com/watch?v=jbC5iIktONo" target="_blank" rel="noopener">https://www.youtube.com/watch?v=jbC5iIktONo</a></p><p>LEDE/OpenWRT/爱快/海蜘蛛/ROS等等，在ESXi上都可以自己尝试下，选出最喜欢的，最合适的，虚拟化就是这么任性！</p><p>ROS+LEDE可以参考，讲的非常详细，照做就可以：<br><a href="https://www.youtube.com/watch?v=mkJxDSMPlPU" target="_blank" rel="noopener">https://www.youtube.com/watch?v=mkJxDSMPlPU</a><br><a href="https://www.youtube.com/watch?v=n0aqV8rbKmE" target="_blank" rel="noopener">https://www.youtube.com/watch?v=n0aqV8rbKmE</a></p><p>LEDE可以尝试lean最新的：<br><a href="https://github.com/coolsnowwolf/lede" target="_blank" rel="noopener">https://github.com/coolsnowwolf/lede</a></p><p>也可以用经典稳定版：<br><a href="https://github.com/coolsnowwolf/openwrt" target="_blank" rel="noopener">https://github.com/coolsnowwolf/openwrt</a></p><p>这里分享2个我编译出来的稳定版openwrt，vmdk格式，有ext4和squashfs两个版本，默认密码password：</p><p><a href="https://wws.lanzous.com/b01bodvyf" target="_blank" rel="noopener">https://wws.lanzous.com/b01bodvyf</a><br>密码:4mj6</p><h1 id="0x50-其他"><a href="#0x50-其他" class="headerlink" title="0x50 其他"></a>0x50 其他</h1><p>我原本用3865U，后面换了i5的软路由，运行ESXi 6.7u3，架构可以看另一篇文章<a href="https://blog.white-alone.com/%E5%AE%B6%E5%BA%AD%E4%B8%87%E5%85%86%E5%B1%80%E5%9F%9F%E7%BD%91%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">《家庭万兆局域网记录》</a></p><p>之所以升级，是打算将更多的虚拟机迁移到软路由上，比如本地Mirror镜像：<br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E8%BD%AF%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE/1598429908256.png" alt=""></p><p>再比如用Gogs搭建的私人代码仓库：<br><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/%E8%BD%AF%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE/1598430225099.png" alt=""></p><p>还有其他的很多轻量级服务，都一并装到软路由上。</p><p>比如可以黑一个群晖、黑一个QNAP、装一个FreeNAS，都可以。</p><p>WiFi就简单很多，直接用wifi6路由当AP即可，不需要其他任何功能。</p><p> 如果房子够大，就AC+AP，妥妥的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x10-什么是软路由&quot;&gt;&lt;a href=&quot;#0x10-什么是软路由&quot; class=&quot;headerlink&quot; title=&quot;0x10 什么是软路由&quot;&gt;&lt;/a&gt;0x10 什么是软路由&lt;/h1&gt;&lt;p&gt;软路由是指利用台式机或服务器配合软件形成路由解决方案，主要靠软件的设</summary>
      
    
    
    
    <category term="Home" scheme="http://github.white-alone.com/categories/Home/"/>
    
    
    <category term="Home" scheme="http://github.white-alone.com/tags/Home/"/>
    
  </entry>
  
  <entry>
    <title>ESXi 虚拟MacOS苹果系统</title>
    <link href="http://github.white-alone.com/ESXi%20%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://github.white-alone.com/ESXi%20%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-06-14T20:36:09.000Z</published>
    <updated>2022-11-26T09:20:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>ESXi 6.7U3上可以非常方便的安装MacOS进行测试，这里做一下几个关键的步骤。</p><h3 id="1、制作cdr-iso镜像"><a href="#1、制作cdr-iso镜像" class="headerlink" title="1、制作cdr/iso镜像"></a>1、制作cdr/iso镜像</h3><h4 id="1-1-首先从用apple官网下载原始文件："><a href="#1-1-首先从用apple官网下载原始文件：" class="headerlink" title="1.1 首先从用apple官网下载原始文件："></a>1.1 首先从用apple官网下载原始文件：</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">macOS Catalina <span class="number">10.15</span></span><br><span class="line">http<span class="variable">s:</span>//support.apple.<span class="keyword">com</span>/zh-<span class="keyword">cn</span>/HT201475</span><br><span class="line">macOS Mojave <span class="number">10.14</span></span><br><span class="line">http<span class="variable">s:</span>//support.apple.<span class="keyword">com</span>/zh-<span class="keyword">cn</span>/HT210190</span><br><span class="line">macOS High Sierra <span class="number">10.13</span></span><br><span class="line">http<span class="variable">s:</span>//support.apple.<span class="keyword">com</span>/zh-<span class="keyword">cn</span>/HT208969</span><br><span class="line">macOS Sierra <span class="number">10.12</span>.</span><br><span class="line">http<span class="variable">s:</span>//support.apple.<span class="keyword">com</span>/zh-<span class="keyword">cn</span>/HT208202</span><br><span class="line">OS <span class="keyword">X</span> El Capitan <span class="number">10.11</span></span><br><span class="line">http<span class="variable">s:</span>//support.apple.<span class="keyword">com</span>/zh-<span class="keyword">cn</span>/HT206886</span><br></pre></td></tr></table></figure><p>或者从其他地方下载原版dmg文件，然后需要找一个macOS系统来制作cdr文件</p><h4 id="1-2-创建一个dmg空文件"><a href="#1-2-创建一个dmg空文件" class="headerlink" title="1.2 创建一个dmg空文件"></a>1.2 创建一个dmg空文件</h4><p>10.13需要5G，10.14需要6G，10.15需要8G，这里以10.14为例<br>然后依次为格式参数、文件系统格式<br>因为内存够大，所以直接挂在tmp目录，这样速度更快，如果内存不大可以自己选择文件路径</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdiutil create -o <span class="regexp">/tmp/M</span>ojave.cdr -<span class="keyword">size</span> <span class="number">4</span>g -layout SPUD -fs HFS+J</span><br></pre></td></tr></table></figure><h4 id="1-3-挂载到虚拟磁盘"><a href="#1-3-挂载到虚拟磁盘" class="headerlink" title="1.3 挂载到虚拟磁盘"></a>1.3 挂载到虚拟磁盘</h4><p>挂载上面新建的 dmg 镜像到虚拟磁盘，载点为 install_build，之后会使用，需要对应</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdiutil attach <span class="regexp">/tmp/</span>Mojave.cdr.dmg -noverify -mountpoint <span class="regexp">/Volumes/i</span>nstall_build</span><br></pre></td></tr></table></figure><h4 id="1-4-将下载的系统安装文件写入虚拟磁盘"><a href="#1-4-将下载的系统安装文件写入虚拟磁盘" class="headerlink" title="1.4 将下载的系统安装文件写入虚拟磁盘"></a>1.4 将下载的系统安装文件写入虚拟磁盘</h4><p>将所下载的系统安装app文件写入到上面挂载的虚拟光驱磁盘中，即我们第一步建立的空镜像，首先需要输入管理员密码，然后回车，之后等待执行结束，包括擦除磁盘、复制文件、添加启动，结束之后，桌面上之前显示 untitled 的虚拟磁盘会变成我们需要的系统名称<br>如果是下载dmg文件，就将dmg挂载后，先把app文件复制到<strong>应用程序</strong>目录，然后将dmg取消挂载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="regexp">/Applications/</span>Install\ macOS\ Mojave.app<span class="regexp">/Contents/</span>Resources<span class="regexp">/createinstallmedia --volume /</span>Volumes<span class="regexp">/install_build</span></span><br></pre></td></tr></table></figure><h4 id="1-5-取消挂载建立的dmg镜像"><a href="#1-5-取消挂载建立的dmg镜像" class="headerlink" title="1.5 取消挂载建立的dmg镜像"></a>1.5 取消挂载建立的dmg镜像</h4><p>取消挂载建立的dmg镜像，方便后续编辑，载点名已经从原来的install_build更改为Install macOS Mojave</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdiutil detach /Volumes/Install<span class="string">\</span> macOS<span class="string">\</span> Mojave</span><br></pre></td></tr></table></figure><h4 id="1-6-格式转换"><a href="#1-6-格式转换" class="headerlink" title="1.6 格式转换"></a>1.6 格式转换</h4><p>将制作好的dmg文件转换为cdr</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /tmp/<span class="module-access"><span class="module"><span class="identifier">Mojave</span>.</span></span>cdr.dmg ~/Desktop/<span class="module-access"><span class="module"><span class="identifier">Mojave</span>.</span></span>dmg</span><br><span class="line">hdiutil convert ~/Desktop/<span class="module-access"><span class="module"><span class="identifier">Mojave</span>.</span></span>dmg -format UDTO -o ~/Desktop/<span class="module-access"><span class="module"><span class="identifier">Mojave</span>.</span></span>iso</span><br></pre></td></tr></table></figure><h4 id="1-7-删除dmg镜像，重命名文件"><a href="#1-7-删除dmg镜像，重命名文件" class="headerlink" title="1.7 删除dmg镜像，重命名文件"></a>1.7 删除dmg镜像，重命名文件</h4><p>删除1.2建立的 dmg 镜像，释放磁盘空间<br>如果想保留，就不用删除</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm ~/Desktop/<span class="module-access"><span class="module"><span class="identifier">Mojave</span>.</span></span>dmg</span><br></pre></td></tr></table></figure><p>将cdr文件重命名为iso<br>实际上macos下的光盘镜像cdr格式就相当于Windows下常见的光盘镜像iso格式<br>在esxi中也可以直接挂载cdr文件</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv ~/Desktop/<span class="module-access"><span class="module"><span class="identifier">Mojave</span>.</span></span>iso.cdr ~/Desktop/<span class="module-access"><span class="module"><span class="identifier">Mojave</span>.</span></span>iso</span><br></pre></td></tr></table></figure><p>其他版本系统，修改相应名称即可</p><h3 id="2、ESXi补丁"><a href="#2、ESXi补丁" class="headerlink" title="2、ESXi补丁"></a>2、ESXi补丁</h3><p>这个补丁原作者的github已经没了，这里分享一个：<br>esxi-unlocker-300.tgz: <a href="https://n459.com/file/20182514-448752132" target="_blank" rel="noopener">https://n459.com/file/20182514-448752132</a></p><p>如果不打补丁，在ESXi中创建虚拟机后，挂载iso会无限重启！</p><p>打补丁方法和前一篇文章”ESXi NVME 启动降级方法”类似，打开ssh，然后scp进去，再ssh登录执行即可。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592141738733.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592141950990.png" alt=""></p><p>之后重启ESXi即可</p><h3 id="3、创建macOS虚拟机"><a href="#3、创建macOS虚拟机" class="headerlink" title="3、创建macOS虚拟机"></a>3、创建macOS虚拟机</h3><p>之后就可以直接创建macOS虚拟机了，10.15用10.14的即可</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592142052687.png" alt=""></p><p>挂载cdr或者iso文件，显存最好设置大一些</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592142182647.png" alt=""></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592142407468.png" alt=""></p><p>安装10.14及以下版本时候需要注意，因为有证书过期的问题，会报错</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592142456969.png" alt=""></p><p>需要编辑下虚拟机设置，断开虚拟机网络，再利用”实用工具-终端”将时间设置到2016年2月14日之前，比如2015年</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592142509569.png" alt=""></p><p>之后退出终端再安装就行</p><h3 id="4、VMware-Tools"><a href="#4、VMware-Tools" class="headerlink" title="4、VMware Tools"></a>4、VMware Tools</h3><p>安装完系统后，还需要安装VMware Tools增强工具，但ESXi默认没有附带macOS的。</p><p>当前vmware tools最新版本 11.1.0：<br><a href="https://my.vmware.com/web/vmware/details?downloadGroup=VMTOOLS1110&amp;productId=974" target="_blank" rel="noopener">https://my.vmware.com/web/vmware/details?downloadGroup=VMTOOLS1110&amp;productId=974</a></p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592142894263.png" alt=""></p><p>这里也分享一个：<br>VMware-Tools-darwin-11.1.0-16036546.zip: <a href="https://n459.com/file/20182514-448752130" target="_blank" rel="noopener">https://n459.com/file/20182514-448752130</a></p><p>解压缩将iso文件传到ESXi上，然后直接挂载安装即可</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592143042743.png" alt=""></p><p>安装完成，即可享用了。可以通过vCenter制作成模板，方便部署安装</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_%E8%99%9A%E6%8B%9FMacOS%E8%8B%B9%E6%9E%9C%E7%B3%BB%E7%BB%9F.md/1592143186063.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ESXi 6.7U3上可以非常方便的安装MacOS进行测试，这里做一下几个关键的步骤。&lt;/p&gt;
&lt;h3 id=&quot;1、制作cdr-iso镜像&quot;&gt;&lt;a href=&quot;#1、制作cdr-iso镜像&quot; class=&quot;headerlink&quot; title=&quot;1、制作cdr/iso镜像&quot;&gt;</summary>
      
    
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/categories/ESXi/"/>
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/tags/ESXi/"/>
    
    <category term="MacOS" scheme="http://github.white-alone.com/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>ESXi NVME 驱动降级方法</title>
    <link href="http://github.white-alone.com/ESXi%20NVME%20%E9%A9%B1%E5%8A%A8%E9%99%8D%E7%BA%A7%E6%96%B9%E6%B3%95/"/>
    <id>http://github.white-alone.com/ESXi%20NVME%20%E9%A9%B1%E5%8A%A8%E9%99%8D%E7%BA%A7%E6%96%B9%E6%B3%95/</id>
    <published>2020-06-14T20:07:17.000Z</published>
    <updated>2022-11-26T09:20:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近将Z390+i7-9700K的机器从ubuntu 18.04 -&gt; ESXi 6.7u3，用虚拟化来提高硬件资源利用率。因为ESXi 7.0阉割的驱动太多了，太麻烦，新特性也没吸引到我，所以还是6.7。</p><p>装完发现海康威视的C2000 Pro NVME SSD没认出来，目测还是驱动阉割的问题，搜了下确实如此，6.5和6.7的就能认出来。</p><p>群里有童鞋也遇到同样问题，就简单写了下做个记录。</p><p>解决方案有2种，一种是直接修改iso镜像，将驱动包替换掉，另一种更简单一点，用vib驱动包降级下驱动即可。</p><p>这里就说下第二种方法：</p><p>先开启ESXi主机的ssh服务，在系统界面或者web界面开启都可以</p><p>下载文件升级包vmware-ESXi-6.7.0-8169922-depot.zip，这里用DELL的：<br><a href="https://dl.dell.com/FOLDER04945367M/1/VMware-VMvisor-Installer-6.7.0-8169922.x86_64-DellEMC_Customized-A01.zip" target="_blank" rel="noopener">https://dl.dell.com/FOLDER04945367M/1/VMware-VMvisor-Installer-6.7.0-8169922.x86_64-DellEMC_Customized-A01.zip</a></p><p>下载完成后解压，把vib20文件夹中2个文件夹里的nvme驱动包scp到esxi主机的/tmp或者其他目录：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vib20<span class="string">\nvme</span></span><br><span class="line">vib20<span class="string">\vmware-esx-esxcli-nvme-plugin</span></span><br></pre></td></tr></table></figure><p>之后ssh到主机，执行命令安装：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#esxcli software vib install -v /tmp/VMware_bootbank_vmware-esx-esxcli-nvme-plugin_1<span class="number">.2</span><span class="number">.0</span><span class="number">.32</span><span class="number">-0.0</span><span class="number">.8169922</span>.vib</span><br><span class="line">#esxcli software vib install -v /tmp/VMW_bootbank_nvme_1<span class="number">.2</span><span class="number">.1</span><span class="number">.34</span><span class="number">-1</span>vmw<span class="number">.670</span><span class="number">.0</span><span class="number">.0</span><span class="number">.8169922</span>.vib</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_NVME_%E9%A9%B1%E5%8A%A8%E9%99%8D%E7%BA%A7%E6%96%B9%E6%B3%95/1592136516206.png" alt=""></p><p>重启后，SSD就识别出来了。</p><p><img src="https://raw.githubusercontent.com/white-alone/blog_img/master/ESXi_NVME_%E9%A9%B1%E5%8A%A8%E9%99%8D%E7%BA%A7%E6%96%B9%E6%B3%95/1592136527438.png" alt=""></p><p>其他诸如网卡等其他外设，都可以用这种方法升级或者降级驱动。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近将Z390+i7-9700K的机器从ubuntu 18.04 -&amp;gt; ESXi 6.7u3，用虚拟化来提高硬件资源利用率。因为ESXi 7.0阉割的驱动太多了，太麻烦，新特性也没吸引到我，所以还是6.7。&lt;/p&gt;
&lt;p&gt;装完发现海康威视的C2000 Pro NVME</summary>
      
    
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/categories/ESXi/"/>
    
    
    <category term="ESXi" scheme="http://github.white-alone.com/tags/ESXi/"/>
    
  </entry>
  
</feed>
